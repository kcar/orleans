//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Orleans.Storage
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MemoryStorageGrainFactory
    {
        

                        public static Orleans.Storage.IMemoryStorageGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Storage.IMemoryStorageGrain), 577125491, primaryKey));
                        }

                        public static Orleans.Storage.IMemoryStorageGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Storage.IMemoryStorageGrain), 577125491, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.Storage.IMemoryStorageGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Storage.IMemoryStorageGrain), 577125491, primaryKey));
                        }

                        public static Orleans.Storage.IMemoryStorageGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Storage.IMemoryStorageGrain), 577125491, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.Storage.IMemoryStorageGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MemoryStorageGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Storage.Orleans.Storage.IMemoryStorageGrain")]
        internal class MemoryStorageGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Storage.IMemoryStorageGrain
        {
            

            public static Orleans.Storage.IMemoryStorageGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Storage.IMemoryStorageGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Storage.IMemoryStorageGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MemoryStorageGrainReference(gr);}, grainRef, 577125491);
            }
            
            protected internal MemoryStorageGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MemoryStorageGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 577125491;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Storage.Orleans.Storage.IMemoryStorageGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MemoryStorageGrainReference input = ((MemoryStorageGrainReference)(original));
                return ((MemoryStorageGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MemoryStorageGrainReference input = ((MemoryStorageGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MemoryStorageGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MemoryStorageGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> Orleans.Storage.IMemoryStorageGrain.ReadStateAsync(string @grainType, string @grainId)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IDictionary<System.String,System.Object>>(-1395809340, new object[] {@grainType, @grainId} );
            }
            
            System.Threading.Tasks.Task Orleans.Storage.IMemoryStorageGrain.WriteStateAsync(string @grainType, string @grainId, IDictionary<String,Object> @grainState)
            {

                return base.InvokeMethodAsync<object>(814983446, new object[] {@grainType, @grainId, @grainState} );
            }
            
            System.Threading.Tasks.Task Orleans.Storage.IMemoryStorageGrain.DeleteStateAsync(string @grainType, string @grainId)
            {

                return base.InvokeMethodAsync<object>(-2090540677, new object[] {@grainType, @grainId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Storage.Orleans.Storage.IMemoryStorageGrain", 577125491)]
    internal class MemoryStorageGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 577125491;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 577125491:  // IMemoryStorageGrain
                        switch (methodId)
                        {
                            case -1395809340: 
                                return ((IMemoryStorageGrain)grain).ReadStateAsync((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 814983446: 
                                return ((IMemoryStorageGrain)grain).WriteStateAsync((String)arguments[0], (String)arguments[1], (System.Collections.Generic.IDictionary<String,Object>)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2090540677: 
                                return ((IMemoryStorageGrain)grain).DeleteStateAsync((String)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 577125491:  // IMemoryStorageGrain
                    switch (methodId)
                    {
                        case -1395809340:
                            return "ReadStateAsync";
                    case 814983446:
                            return "WriteStateAsync";
                    case -2090540677:
                            return "DeleteStateAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace Orleans.Runtime
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Orleans.Runtime;
    using Orleans;
    using Orleans.Streams;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class GrainRingRangeListenerFactory
    {
        

                        public static Orleans.Runtime.IGrainRingRangeListener GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IGrainRingRangeListener), -1770786272, primaryKey));
                        }

                        public static Orleans.Runtime.IGrainRingRangeListener GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IGrainRingRangeListener), -1770786272, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.Runtime.IGrainRingRangeListener GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IGrainRingRangeListener), -1770786272, primaryKey));
                        }

                        public static Orleans.Runtime.IGrainRingRangeListener GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IGrainRingRangeListener), -1770786272, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.Runtime.IGrainRingRangeListener Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainRingRangeListenerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IGrainRingRangeListener")]
        internal class GrainRingRangeListenerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IGrainRingRangeListener
        {
            

            public static Orleans.Runtime.IGrainRingRangeListener Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IGrainRingRangeListener) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IGrainRingRangeListener), (global::Orleans.Runtime.GrainReference gr) => { return new GrainRingRangeListenerReference(gr);}, grainRef, -1770786272);
            }
            
            protected internal GrainRingRangeListenerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainRingRangeListenerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1770786272;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IGrainRingRangeListener";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainRingRangeListenerReference input = ((GrainRingRangeListenerReference)(original));
                return ((GrainRingRangeListenerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainRingRangeListenerReference input = ((GrainRingRangeListenerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainRingRangeListenerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainRingRangeListenerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IGrainRingRangeListener.RangeChangeNotification(Orleans.Runtime.IRingRange @old, Orleans.Runtime.IRingRange @now)
            {

                return base.InvokeMethodAsync<object>(1581372209, new object[] {@old, @now} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IGrainRingRangeListener", -1770786272)]
    internal class GrainRingRangeListenerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1770786272;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1770786272:  // IGrainRingRangeListener
                        switch (methodId)
                        {
                            case 1581372209: 
                                return ((IGrainRingRangeListener)grain).RangeChangeNotification((IRingRange)arguments[0], (IRingRange)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1770786272:  // IGrainRingRangeListener
                    switch (methodId)
                    {
                        case 1581372209:
                            return "RangeChangeNotification";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class TypeManagerFactory
    {
        

            public static Orleans.Runtime.ITypeManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return TypeManagerReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.ITypeManager GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.ITypeManager")]
        internal class TypeManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.ITypeManager
        {
            

            public static Orleans.Runtime.ITypeManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.ITypeManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.ITypeManager), (global::Orleans.Runtime.GrainReference gr) => { return new TypeManagerReference(gr);}, grainRef, 471740693);
            }
            
            protected internal TypeManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal TypeManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 471740693;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.ITypeManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                TypeManagerReference input = ((TypeManagerReference)(original));
                return ((TypeManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                TypeManagerReference input = ((TypeManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return TypeManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return TypeManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.GrainInterfaceMap> Orleans.Runtime.ITypeManager.GetTypeCodeMap(Orleans.Runtime.SiloAddress @silo)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.GrainInterfaceMap>(-1709237309, new object[] {@silo} );
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.ImplicitStreamSubscriberTable> Orleans.Runtime.ITypeManager.GetImplicitStreamSubscriberTable(Orleans.Runtime.SiloAddress @silo)
            {

                return base.InvokeMethodAsync<Orleans.Streams.ImplicitStreamSubscriberTable>(1918315851, new object[] {@silo} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.ITypeManager", 471740693)]
    internal class TypeManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 471740693;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 471740693:  // ITypeManager
                        switch (methodId)
                        {
                            case -1709237309: 
                                return ((ITypeManager)grain).GetTypeCodeMap((SiloAddress)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1918315851: 
                                return ((ITypeManager)grain).GetImplicitStreamSubscriberTable((SiloAddress)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 471740693:  // ITypeManager
                    switch (methodId)
                    {
                        case -1709237309:
                            return "GetTypeCodeMap";
                    case 1918315851:
                            return "GetImplicitStreamSubscriberTable";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class CatalogFactory
    {
        

            public static Orleans.Runtime.ICatalog Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return CatalogReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.ICatalog GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.ICatalog")]
        internal class CatalogReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.ICatalog
        {
            

            public static Orleans.Runtime.ICatalog Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.ICatalog) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.ICatalog), (global::Orleans.Runtime.GrainReference gr) => { return new CatalogReference(gr);}, grainRef, -2124089409);
            }
            
            protected internal CatalogReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal CatalogReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -2124089409;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.ICatalog";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                CatalogReference input = ((CatalogReference)(original));
                return ((CatalogReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                CatalogReference input = ((CatalogReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return CatalogReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return CatalogMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.ICatalog.DeleteActivations(System.Collections.Generic.List<ActivationAddress> @activationAddresses)
            {

                return base.InvokeMethodAsync<object>(-1850604271, new object[] {@activationAddresses} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.ICatalog", -2124089409)]
    internal class CatalogMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -2124089409;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2124089409:  // ICatalog
                        switch (methodId)
                        {
                            case -1850604271: 
                                return ((ICatalog)grain).DeleteActivations((System.Collections.Generic.List<ActivationAddress>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -2124089409:  // ICatalog
                    switch (methodId)
                    {
                        case -1850604271:
                            return "DeleteActivations";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ManagementGrainFactory
    {
        

                        public static Orleans.Runtime.IManagementGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IManagementGrain), -1734666656, primaryKey));
                        }

                        public static Orleans.Runtime.IManagementGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IManagementGrain), -1734666656, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.Runtime.IManagementGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IManagementGrain), -1734666656, primaryKey));
                        }

                        public static Orleans.Runtime.IManagementGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Runtime.IManagementGrain), -1734666656, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.Runtime.IManagementGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ManagementGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IManagementGrain")]
        internal class ManagementGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IManagementGrain
        {
            

            public static Orleans.Runtime.IManagementGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IManagementGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IManagementGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ManagementGrainReference(gr);}, grainRef, -1734666656);
            }
            
            protected internal ManagementGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ManagementGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1734666656;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IManagementGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ManagementGrainReference input = ((ManagementGrainReference)(original));
                return ((ManagementGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ManagementGrainReference input = ((ManagementGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ManagementGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ManagementGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Orleans.Runtime.SiloAddress, Orleans.Runtime.SiloStatus>> Orleans.Runtime.IManagementGrain.GetHosts(bool @onlyActive)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<Orleans.Runtime.SiloAddress,Orleans.Runtime.SiloStatus>>(1788323731, new object[] {@onlyActive} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.SetSystemLogLevel(Orleans.Runtime.SiloAddress[] @hostsIds, int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(1345873229, new object[] {@hostsIds, @traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.SetAppLogLevel(Orleans.Runtime.SiloAddress[] @hostsIds, int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(-648657983, new object[] {@hostsIds, @traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.SetLogLevel(Orleans.Runtime.SiloAddress[] @hostsIds, string @logName, int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(-1683776832, new object[] {@hostsIds, @logName, @traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.ForceGarbageCollection(Orleans.Runtime.SiloAddress[] @hostsIds)
            {

                return base.InvokeMethodAsync<object>(2002650463, new object[] {@hostsIds} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.ForceActivationCollection(Orleans.Runtime.SiloAddress[] @hostsIds, System.TimeSpan @ageLimit)
            {

                return base.InvokeMethodAsync<object>(316388927, new object[] {@hostsIds, @ageLimit} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.ForceActivationCollection(System.TimeSpan @ageLimit)
            {

                return base.InvokeMethodAsync<object>(-2082132213, new object[] {@ageLimit} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.ForceRuntimeStatisticsCollection(Orleans.Runtime.SiloAddress[] @siloAddresses)
            {

                return base.InvokeMethodAsync<object>(531832239, new object[] {@siloAddresses} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.SiloRuntimeStatistics[]> Orleans.Runtime.IManagementGrain.GetRuntimeStatistics(Orleans.Runtime.SiloAddress[] @hostsIds)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.SiloRuntimeStatistics[]>(-1055610598, new object[] {@hostsIds} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.SimpleGrainStatistic[]> Orleans.Runtime.IManagementGrain.GetSimpleGrainStatistics(Orleans.Runtime.SiloAddress[] @hostsIds)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.SimpleGrainStatistic[]>(-1446411211, new object[] {@hostsIds} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.SimpleGrainStatistic[]> Orleans.Runtime.IManagementGrain.GetSimpleGrainStatistics()
            {

                return base.InvokeMethodAsync<Orleans.Runtime.SimpleGrainStatistic[]>(-1434082603, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> Orleans.Runtime.IManagementGrain.GetGrainActivationCount(Orleans.Runtime.GrainReference @grainReference)
            {

                return base.InvokeMethodAsync<System.Int32>(-1868174702, new object[] {@grainReference} );
            }
            
            System.Threading.Tasks.Task<int> Orleans.Runtime.IManagementGrain.GetTotalActivationCount()
            {

                return base.InvokeMethodAsync<System.Int32>(-1030672010, new object[] {} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IManagementGrain.UpdateConfiguration(Orleans.Runtime.SiloAddress[] @hostIds, Dictionary<String,String> @configuration, Dictionary<String,String> @tracing)
            {

                return base.InvokeMethodAsync<object>(-1529190212, new object[] {@hostIds, @configuration, @tracing} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IManagementGrain", -1734666656)]
    internal class ManagementGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1734666656;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1734666656:  // IManagementGrain
                        switch (methodId)
                        {
                            case 1788323731: 
                                return ((IManagementGrain)grain).GetHosts((Boolean)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1345873229: 
                                return ((IManagementGrain)grain).SetSystemLogLevel((SiloAddress[])arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -648657983: 
                                return ((IManagementGrain)grain).SetAppLogLevel((SiloAddress[])arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1683776832: 
                                return ((IManagementGrain)grain).SetLogLevel((SiloAddress[])arguments[0], (String)arguments[1], (Int32)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2002650463: 
                                return ((IManagementGrain)grain).ForceGarbageCollection((SiloAddress[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 316388927: 
                                return ((IManagementGrain)grain).ForceActivationCollection((SiloAddress[])arguments[0], (TimeSpan)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2082132213: 
                                return ((IManagementGrain)grain).ForceActivationCollection((TimeSpan)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 531832239: 
                                return ((IManagementGrain)grain).ForceRuntimeStatisticsCollection((SiloAddress[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1055610598: 
                                return ((IManagementGrain)grain).GetRuntimeStatistics((SiloAddress[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1446411211: 
                                return ((IManagementGrain)grain).GetSimpleGrainStatistics((SiloAddress[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1434082603: 
                                return ((IManagementGrain)grain).GetSimpleGrainStatistics().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1868174702: 
                                return ((IManagementGrain)grain).GetGrainActivationCount((GrainReference)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1030672010: 
                                return ((IManagementGrain)grain).GetTotalActivationCount().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1529190212: 
                                return ((IManagementGrain)grain).UpdateConfiguration((SiloAddress[])arguments[0], (System.Collections.Generic.Dictionary<String,String>)arguments[1], (System.Collections.Generic.Dictionary<String,String>)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1734666656:  // IManagementGrain
                    switch (methodId)
                    {
                        case 1788323731:
                            return "GetHosts";
                    case 1345873229:
                            return "SetSystemLogLevel";
                    case -648657983:
                            return "SetAppLogLevel";
                    case -1683776832:
                            return "SetLogLevel";
                    case 2002650463:
                            return "ForceGarbageCollection";
                    case 316388927:
                            return "ForceActivationCollection";
                    case -2082132213:
                            return "ForceActivationCollection";
                    case 531832239:
                            return "ForceRuntimeStatisticsCollection";
                    case -1055610598:
                            return "GetRuntimeStatistics";
                    case -1446411211:
                            return "GetSimpleGrainStatistics";
                    case -1434082603:
                            return "GetSimpleGrainStatistics";
                    case -1868174702:
                            return "GetGrainActivationCount";
                    case -1030672010:
                            return "GetTotalActivationCount";
                    case -1529190212:
                            return "UpdateConfiguration";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class MembershipServiceFactory
    {
        

            public static Orleans.Runtime.IMembershipService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return MembershipServiceReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.IMembershipService GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IMembershipService")]
        internal class MembershipServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IMembershipService
        {
            

            public static Orleans.Runtime.IMembershipService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IMembershipService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IMembershipService), (global::Orleans.Runtime.GrainReference gr) => { return new MembershipServiceReference(gr);}, grainRef, 1380110596);
            }
            
            protected internal MembershipServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MembershipServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1380110596;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IMembershipService";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MembershipServiceReference input = ((MembershipServiceReference)(original));
                return ((MembershipServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MembershipServiceReference input = ((MembershipServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MembershipServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MembershipServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IMembershipService.SiloStatusChangeNotification(Orleans.Runtime.SiloAddress @updatedSilo, Orleans.Runtime.SiloStatus @status)
            {

                return base.InvokeMethodAsync<object>(-378592564, new object[] {@updatedSilo, @status} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IMembershipService.Ping(int @pingNumber)
            {

                return base.InvokeMethodAsync<object>(667017, new object[] {@pingNumber} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IMembershipService", 1380110596)]
    internal class MembershipServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1380110596;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1380110596:  // IMembershipService
                        switch (methodId)
                        {
                            case -378592564: 
                                return ((IMembershipService)grain).SiloStatusChangeNotification((SiloAddress)arguments[0], (SiloStatus)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 667017: 
                                return ((IMembershipService)grain).Ping((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1380110596:  // IMembershipService
                    switch (methodId)
                    {
                        case -378592564:
                            return "SiloStatusChangeNotification";
                    case 667017:
                            return "Ping";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class RemoteGrainDirectoryFactory
    {
        

            public static Orleans.Runtime.IRemoteGrainDirectory Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return RemoteGrainDirectoryReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.IRemoteGrainDirectory GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IRemoteGrainDirectory")]
        internal class RemoteGrainDirectoryReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IRemoteGrainDirectory
        {
            

            public static Orleans.Runtime.IRemoteGrainDirectory Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IRemoteGrainDirectory) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IRemoteGrainDirectory), (global::Orleans.Runtime.GrainReference gr) => { return new RemoteGrainDirectoryReference(gr);}, grainRef, -185679256);
            }
            
            protected internal RemoteGrainDirectoryReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RemoteGrainDirectoryReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -185679256;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IRemoteGrainDirectory";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RemoteGrainDirectoryReference input = ((RemoteGrainDirectoryReference)(original));
                return ((RemoteGrainDirectoryReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RemoteGrainDirectoryReference input = ((RemoteGrainDirectoryReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RemoteGrainDirectoryReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RemoteGrainDirectoryMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<int> Orleans.Runtime.IRemoteGrainDirectory.Register(Orleans.Runtime.ActivationAddress @address, int @retries)
            {

                return base.InvokeMethodAsync<System.Int32>(624549247, new object[] {@address, @retries} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.RegisterMany(List<ActivationAddress> @addresses, int @retries)
            {

                return base.InvokeMethodAsync<object>(1614737875, new object[] {@addresses, @retries} );
            }
            
            System.Threading.Tasks.Task<System.Tuple<Orleans.Runtime.ActivationAddress, int>> Orleans.Runtime.IRemoteGrainDirectory.RegisterSingleActivation(Orleans.Runtime.ActivationAddress @address, int @retries)
            {

                return base.InvokeMethodAsync<System.Tuple<Orleans.Runtime.ActivationAddress,System.Int32>>(1303881764, new object[] {@address, @retries} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.RegisterManySingleActivation(List<ActivationAddress> @addresses, int @retries)
            {

                return base.InvokeMethodAsync<object>(-1654634789, new object[] {@addresses, @retries} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.Unregister(Orleans.Runtime.ActivationAddress @address, bool @force, int @retries)
            {

                return base.InvokeMethodAsync<object>(-669869707, new object[] {@address, @force, @retries} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.DeleteGrain(Orleans.Runtime.GrainId @grain, int @retries)
            {

                return base.InvokeMethodAsync<object>(1632927414, new object[] {@grain, @retries} );
            }
            
            System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress, Orleans.Runtime.ActivationId>>, int>> Orleans.Runtime.IRemoteGrainDirectory.LookUp(Orleans.Runtime.GrainId @grain, int @retries)
            {

                return base.InvokeMethodAsync<System.Tuple<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,Orleans.Runtime.ActivationId>>,System.Int32>>(-1661482599, new object[] {@grain, @retries} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.GrainId, int, System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress, Orleans.Runtime.ActivationId>>>>> Orleans.Runtime.IRemoteGrainDirectory.LookUpMany(List<Tuple<GrainId,Int32>> @grainAndETagList, int @retries)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.GrainId,System.Int32,System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,Orleans.Runtime.ActivationId>>>>>(1101728895, new object[] {@grainAndETagList, @retries} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.AcceptHandoffPartition(Orleans.Runtime.SiloAddress @source, Dictionary<GrainId,IGrainInfo> @partition, bool @isFullCopy)
            {

                return base.InvokeMethodAsync<object>(-2026920982, new object[] {@source, @partition, @isFullCopy} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.RemoveHandoffPartition(Orleans.Runtime.SiloAddress @source)
            {

                return base.InvokeMethodAsync<object>(1987552759, new object[] {@source} );
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IRemoteGrainDirectory.UnregisterMany(List<ActivationAddress> @activationAddresses, int @retries)
            {

                return base.InvokeMethodAsync<object>(-1945064035, new object[] {@activationAddresses, @retries} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IRemoteGrainDirectory", -185679256)]
    internal class RemoteGrainDirectoryMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -185679256;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -185679256:  // IRemoteGrainDirectory
                        switch (methodId)
                        {
                            case 624549247: 
                                return ((IRemoteGrainDirectory)grain).Register((ActivationAddress)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1614737875: 
                                return ((IRemoteGrainDirectory)grain).RegisterMany((List<ActivationAddress>)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1303881764: 
                                return ((IRemoteGrainDirectory)grain).RegisterSingleActivation((ActivationAddress)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1654634789: 
                                return ((IRemoteGrainDirectory)grain).RegisterManySingleActivation((List<ActivationAddress>)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -669869707: 
                                return ((IRemoteGrainDirectory)grain).Unregister((ActivationAddress)arguments[0], (Boolean)arguments[1], (Int32)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1632927414: 
                                return ((IRemoteGrainDirectory)grain).DeleteGrain((GrainId)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1661482599: 
                                return ((IRemoteGrainDirectory)grain).LookUp((GrainId)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1101728895: 
                                return ((IRemoteGrainDirectory)grain).LookUpMany((List<Tuple<GrainId,Int32>>)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2026920982: 
                                return ((IRemoteGrainDirectory)grain).AcceptHandoffPartition((SiloAddress)arguments[0], (Dictionary<GrainId,IGrainInfo>)arguments[1], (Boolean)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1987552759: 
                                return ((IRemoteGrainDirectory)grain).RemoveHandoffPartition((SiloAddress)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1945064035: 
                                return ((IRemoteGrainDirectory)grain).UnregisterMany((List<ActivationAddress>)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -185679256:  // IRemoteGrainDirectory
                    switch (methodId)
                    {
                        case 624549247:
                            return "Register";
                    case 1614737875:
                            return "RegisterMany";
                    case 1303881764:
                            return "RegisterSingleActivation";
                    case -1654634789:
                            return "RegisterManySingleActivation";
                    case -669869707:
                            return "Unregister";
                    case 1632927414:
                            return "DeleteGrain";
                    case -1661482599:
                            return "LookUp";
                    case 1101728895:
                            return "LookUpMany";
                    case -2026920982:
                            return "AcceptHandoffPartition";
                    case 1987552759:
                            return "RemoveHandoffPartition";
                    case -1945064035:
                            return "UnregisterMany";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class DeploymentLoadPublisherFactory
    {
        

            public static Orleans.Runtime.IDeploymentLoadPublisher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return DeploymentLoadPublisherReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.IDeploymentLoadPublisher GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IDeploymentLoadPublisher")]
        internal class DeploymentLoadPublisherReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IDeploymentLoadPublisher
        {
            

            public static Orleans.Runtime.IDeploymentLoadPublisher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IDeploymentLoadPublisher) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IDeploymentLoadPublisher), (global::Orleans.Runtime.GrainReference gr) => { return new DeploymentLoadPublisherReference(gr);}, grainRef, -300889017);
            }
            
            protected internal DeploymentLoadPublisherReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DeploymentLoadPublisherReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -300889017;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IDeploymentLoadPublisher";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DeploymentLoadPublisherReference input = ((DeploymentLoadPublisherReference)(original));
                return ((DeploymentLoadPublisherReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DeploymentLoadPublisherReference input = ((DeploymentLoadPublisherReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DeploymentLoadPublisherReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DeploymentLoadPublisherMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IDeploymentLoadPublisher.UpdateRuntimeStatistics(Orleans.Runtime.SiloAddress @siloAddress, Orleans.Runtime.SiloRuntimeStatistics @siloStats)
            {

                return base.InvokeMethodAsync<object>(1787332004, new object[] {@siloAddress, @siloStats} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IDeploymentLoadPublisher", -300889017)]
    internal class DeploymentLoadPublisherMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -300889017;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -300889017:  // IDeploymentLoadPublisher
                        switch (methodId)
                        {
                            case 1787332004: 
                                return ((IDeploymentLoadPublisher)grain).UpdateRuntimeStatistics((SiloAddress)arguments[0], (SiloRuntimeStatistics)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -300889017:  // IDeploymentLoadPublisher
                    switch (methodId)
                    {
                        case 1787332004:
                            return "UpdateRuntimeStatistics";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class ClientObserverRegistrarFactory
    {
        

            public static Orleans.Runtime.IClientObserverRegistrar Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return ClientObserverRegistrarReference.Cast(grainRef);
            }
            internal static Orleans.Runtime.IClientObserverRegistrar GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Runtime.Orleans.Runtime.IClientObserverRegistrar")]
        internal class ClientObserverRegistrarReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Runtime.IClientObserverRegistrar
        {
            

            public static Orleans.Runtime.IClientObserverRegistrar Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Runtime.IClientObserverRegistrar) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Runtime.IClientObserverRegistrar), (global::Orleans.Runtime.GrainReference gr) => { return new ClientObserverRegistrarReference(gr);}, grainRef, -241055592);
            }
            
            protected internal ClientObserverRegistrarReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ClientObserverRegistrarReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -241055592;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Runtime.Orleans.Runtime.IClientObserverRegistrar";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ClientObserverRegistrarReference input = ((ClientObserverRegistrarReference)(original));
                return ((ClientObserverRegistrarReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ClientObserverRegistrarReference input = ((ClientObserverRegistrarReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ClientObserverRegistrarReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ClientObserverRegistrarMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Runtime.IClientObserverRegistrar.Start()
            {

                return base.InvokeMethodAsync<object>(1420312199, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Runtime.Orleans.Runtime.IClientObserverRegistrar", -241055592)]
    internal class ClientObserverRegistrarMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -241055592;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -241055592:  // IClientObserverRegistrar
                        switch (methodId)
                        {
                            case 1420312199: 
                                return ((IClientObserverRegistrar)grain).Start().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -241055592:  // IClientObserverRegistrar
                    switch (methodId)
                    {
                        case 1420312199:
                            return "Start";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GuidIdSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_Runtime_GuidIdSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GuidId input = ((Orleans.Runtime.GuidId)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Guid, stream, typeof(System.Guid));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GuidId result = ((Orleans.Runtime.GuidId)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GuidId))));
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GuidId), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.GuidId).GetField("Guid", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_RequestInvocationHistorySerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static Orleans_Runtime_RequestInvocationHistorySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.RequestInvocationHistory input = ((Orleans.Runtime.RequestInvocationHistory)(original));
            Orleans.Runtime.RequestInvocationHistory result = ((Orleans.Runtime.RequestInvocationHistory)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.RequestInvocationHistory))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Runtime.ActivationId)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ActivationId)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.GrainId)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.GrainId)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.InterfaceId;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.MethodId;
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.RequestInvocationHistory input = ((Orleans.Runtime.RequestInvocationHistory)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationId, stream, typeof(Orleans.Runtime.ActivationId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainId, stream, typeof(Orleans.Runtime.GrainId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InterfaceId, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MethodId, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.RequestInvocationHistory result = ((Orleans.Runtime.RequestInvocationHistory)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.RequestInvocationHistory))));
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Runtime.ActivationId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.ActivationId), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.GrainId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GrainId), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.RequestInvocationHistory), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.RequestInvocationHistory).GetField("<ActivationId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.RequestInvocationHistory).GetField("<GrainId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.RequestInvocationHistory).GetField("<InterfaceId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.RequestInvocationHistory).GetField("<MethodId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_PreferLocalPlacementSerialization
    {
        
        static Orleans_Runtime_PreferLocalPlacementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.PreferLocalPlacement input = ((Orleans.Runtime.PreferLocalPlacement)(original));
            Orleans.Runtime.PreferLocalPlacement result = ((Orleans.Runtime.PreferLocalPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.PreferLocalPlacement))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.PreferLocalPlacement input = ((Orleans.Runtime.PreferLocalPlacement)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.PreferLocalPlacement result = ((Orleans.Runtime.PreferLocalPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.PreferLocalPlacement))));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.PreferLocalPlacement), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_UniqueKeySerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static Orleans_Runtime_UniqueKeySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.UniqueKey input = ((Orleans.Runtime.UniqueKey)(original));
            Orleans.Runtime.UniqueKey result = new Orleans.Runtime.UniqueKey();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.KeyExt;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.N0;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.N1;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.TypeCodeData;
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.UniqueKey input = ((Orleans.Runtime.UniqueKey)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.KeyExt, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.N0, stream, typeof(ulong));
            Orleans.Serialization.SerializationManager.SerializeInner(input.N1, stream, typeof(ulong));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TypeCodeData, stream, typeof(ulong));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.UniqueKey result = new Orleans.Runtime.UniqueKey();
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((ulong)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ulong), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((ulong)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ulong), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((ulong)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(ulong), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.UniqueKey), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.UniqueKey).GetField("<KeyExt>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.UniqueKey).GetField("<N0>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.UniqueKey).GetField("<N1>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.UniqueKey).GetField("<TypeCodeData>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_SingleRangeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Runtime_SingleRangeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.SingleRange input = ((Orleans.Runtime.SingleRange)(original));
            Orleans.Runtime.SingleRange result = ((Orleans.Runtime.SingleRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SingleRange))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.SingleRange input = ((Orleans.Runtime.SingleRange)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(uint));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(uint));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.SingleRange result = ((Orleans.Runtime.SingleRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SingleRange))));
            object objResult = ((object)(result));
            object temp1 = ((uint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(uint), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((uint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(uint), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.SingleRange), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.SingleRange).GetField("begin", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.SingleRange).GetField("end", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GeneralMultiRangeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Runtime_GeneralMultiRangeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.GeneralMultiRange input = ((Orleans.Runtime.GeneralMultiRange)(original));
            Orleans.Runtime.GeneralMultiRange result = ((Orleans.Runtime.GeneralMultiRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GeneralMultiRange))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.List<Orleans.Runtime.SingleRange>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GeneralMultiRange input = ((Orleans.Runtime.GeneralMultiRange)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(System.Collections.Generic.List<Orleans.Runtime.SingleRange>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GeneralMultiRange result = ((Orleans.Runtime.GeneralMultiRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GeneralMultiRange))));
            object objResult = ((object)(result));
            object temp1 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.List<Orleans.Runtime.SingleRange>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Orleans.Runtime.SingleRange>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GeneralMultiRange), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.GeneralMultiRange).GetField("rangePercentage", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.GeneralMultiRange).GetField("rangeSize", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.GeneralMultiRange).GetField("ranges", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_EquallyDevidedMultiRangeSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Runtime_EquallyDevidedMultiRangeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.EquallyDevidedMultiRange input = ((Orleans.Runtime.EquallyDevidedMultiRange)(original));
            Orleans.Runtime.EquallyDevidedMultiRange result = ((Orleans.Runtime.EquallyDevidedMultiRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.EquallyDevidedMultiRange))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.IRingRangeInternal>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = fieldInfo3.GetValue(input);
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.EquallyDevidedMultiRange input = ((Orleans.Runtime.EquallyDevidedMultiRange)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.IRingRangeInternal>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(long));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.EquallyDevidedMultiRange result = ((Orleans.Runtime.EquallyDevidedMultiRange)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.EquallyDevidedMultiRange))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.IRingRangeInternal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.IRingRangeInternal>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.EquallyDevidedMultiRange), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.EquallyDevidedMultiRange).GetField("multiRanges", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.EquallyDevidedMultiRange).GetField("rangePercentage", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.EquallyDevidedMultiRange).GetField("rangeSize", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_ActivationCountBasedPlacementSerialization
    {
        
        static Orleans_Runtime_ActivationCountBasedPlacementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.ActivationCountBasedPlacement input = ((Orleans.Runtime.ActivationCountBasedPlacement)(original));
            Orleans.Runtime.ActivationCountBasedPlacement result = ((Orleans.Runtime.ActivationCountBasedPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.ActivationCountBasedPlacement))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.ActivationCountBasedPlacement input = ((Orleans.Runtime.ActivationCountBasedPlacement)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.ActivationCountBasedPlacement result = ((Orleans.Runtime.ActivationCountBasedPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.ActivationCountBasedPlacement))));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.ActivationCountBasedPlacement), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_StatelessWorkerPlacementSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Runtime_StatelessWorkerPlacementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.StatelessWorkerPlacement input = ((Orleans.Runtime.StatelessWorkerPlacement)(original));
            Orleans.Runtime.StatelessWorkerPlacement result = ((Orleans.Runtime.StatelessWorkerPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.StatelessWorkerPlacement))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.MaxLocal;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.MinAvailable;
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.StatelessWorkerPlacement input = ((Orleans.Runtime.StatelessWorkerPlacement)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxLocal, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinAvailable, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.StatelessWorkerPlacement result = ((Orleans.Runtime.StatelessWorkerPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.StatelessWorkerPlacement))));
            object objResult = ((object)(result));
            object temp1 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.StatelessWorkerPlacement), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.StatelessWorkerPlacement).GetField("<MaxLocal>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.StatelessWorkerPlacement).GetField("<MinAvailable>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_RandomPlacementSerialization
    {
        
        static Orleans_Runtime_RandomPlacementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.RandomPlacement input = ((Orleans.Runtime.RandomPlacement)(original));
            Orleans.Runtime.RandomPlacement result = ((Orleans.Runtime.RandomPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.RandomPlacement))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.RandomPlacement input = ((Orleans.Runtime.RandomPlacement)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.RandomPlacement result = ((Orleans.Runtime.RandomPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.RandomPlacement))));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.RandomPlacement), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_SystemPlacementSerialization
    {
        
        static Orleans_Runtime_SystemPlacementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.SystemPlacement input = ((Orleans.Runtime.SystemPlacement)(original));
            Orleans.Runtime.SystemPlacement result = ((Orleans.Runtime.SystemPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SystemPlacement))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.SystemPlacement input = ((Orleans.Runtime.SystemPlacement)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.SystemPlacement result = ((Orleans.Runtime.SystemPlacement)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SystemPlacement))));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.SystemPlacement), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GrainInterfaceMapSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Orleans_Runtime_GrainInterfaceMapSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.GrainInterfaceMap input = ((Orleans.Runtime.GrainInterfaceMap)(original));
            Orleans.Runtime.GrainInterfaceMap result = ((Orleans.Runtime.GrainInterfaceMap)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainInterfaceMap))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.HashSet<System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.GrainInterfaceData>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.GrainInterfaceData>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo4.GetValue(input))));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.HashSet<System.Int32>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GrainInterfaceMap input = ((Orleans.Runtime.GrainInterfaceMap)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.HashSet<System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.GrainInterfaceData>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.GrainInterfaceData>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.Collections.Generic.HashSet<System.Int32>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GrainInterfaceMap result = ((Orleans.Runtime.GrainInterfaceMap)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainInterfaceMap))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.HashSet<System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.HashSet<System.String>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.GrainInterfaceData>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.Int32,Orleans.Runtime.GrainInterfaceData>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.GrainInterfaceData>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.GrainInterfaceData>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.HashSet<System.Int32>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.HashSet<System.Int32>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GrainInterfaceMap), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.GrainInterfaceMap).GetField("loadedGrainAsemblies", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.GrainInterfaceMap).GetField("localTestMode", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.GrainInterfaceMap).GetField("table", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.GrainInterfaceMap).GetField("typeToInterfaceData", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.GrainInterfaceMap).GetField("unordered", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GrainInterfaceDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static Orleans_Runtime_GrainInterfaceDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.GrainInterfaceData input = ((Orleans.Runtime.GrainInterfaceData)(original));
            Orleans.Runtime.GrainInterfaceData result = ((Orleans.Runtime.GrainInterfaceData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainInterfaceData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Runtime.GrainClassData)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.HashSet<Orleans.Runtime.GrainClassData>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo4.GetValue(input))));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GrainInterfaceData input = ((Orleans.Runtime.GrainInterfaceData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(Orleans.Runtime.GrainClassData));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.Collections.Generic.HashSet<Orleans.Runtime.GrainClassData>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GrainInterfaceData result = ((Orleans.Runtime.GrainInterfaceData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainInterfaceData))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Runtime.GrainClassData)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GrainClassData), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.HashSet<Orleans.Runtime.GrainClassData>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.HashSet<Orleans.Runtime.GrainClassData>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GrainInterfaceData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.GrainInterfaceData).GetField("<GrainInterface>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.GrainInterfaceData).GetField("<InterfaceId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.GrainInterfaceData).GetField("<PrimaryImplementation>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.GrainInterfaceData).GetField("implementations", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GrainClassDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Runtime_GrainClassDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.GrainClassData input = ((Orleans.Runtime.GrainClassData)(original));
            Orleans.Runtime.GrainClassData result = ((Orleans.Runtime.GrainClassData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainClassData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Runtime.PlacementStrategy)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GrainClassData input = ((Orleans.Runtime.GrainClassData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(Orleans.Runtime.PlacementStrategy));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GrainClassData result = ((Orleans.Runtime.GrainClassData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.GrainClassData))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Runtime.PlacementStrategy)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.PlacementStrategy), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GrainClassData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.GrainClassData).GetField("<GrainClass>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.GrainClassData).GetField("<GrainTypeCode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.GrainClassData).GetField("placementStrategy", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_SiloRuntimeStatisticsSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        static Orleans_Runtime_SiloRuntimeStatisticsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.SiloRuntimeStatistics input = ((Orleans.Runtime.SiloRuntimeStatistics)(original));
            Orleans.Runtime.SiloRuntimeStatistics result = ((Orleans.Runtime.SiloRuntimeStatistics)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SiloRuntimeStatistics))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.ActivationCount;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.AvailableMemory;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.ClientCount;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.CpuUsage;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.DateTime;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.IsOverloaded;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.MemoryUsage;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.ReceiveQueueLength;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.RecentlyUsedActivationCount;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.RequestQueueLength;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.SendQueueLength;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.TotalPhysicalMemory;
            fieldInfo12.SetValue(objResult, temp12);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.SiloRuntimeStatistics input = ((Orleans.Runtime.SiloRuntimeStatistics)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AvailableMemory, stream, typeof(float));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientCount, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CpuUsage, stream, typeof(float));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DateTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsOverloaded, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MemoryUsage, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceiveQueueLength, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RecentlyUsedActivationCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RequestQueueLength, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SendQueueLength, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalPhysicalMemory, stream, typeof(long));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.SiloRuntimeStatistics result = ((Orleans.Runtime.SiloRuntimeStatistics)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.SiloRuntimeStatistics))));
            object objResult = ((object)(result));
            object temp1 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((float)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(float), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((float)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(float), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.SiloRuntimeStatistics), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<ActivationCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<AvailableMemory>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<ClientCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<CpuUsage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<DateTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<IsOverloaded>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<MemoryUsage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<ReceiveQueueLength>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<RecentlyUsedActivationCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<RequestQueueLength>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<SendQueueLength>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.Runtime.SiloRuntimeStatistics).GetField("<TotalPhysicalMemory>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_SimpleGrainStatisticSerialization
    {
        
        static Orleans_Runtime_SimpleGrainStatisticSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.SimpleGrainStatistic input = ((Orleans.Runtime.SimpleGrainStatistic)(original));
            Orleans.Runtime.SimpleGrainStatistic result = new Orleans.Runtime.SimpleGrainStatistic();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ActivationCount = input.ActivationCount;
            result.GrainType = input.GrainType;
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SiloAddress)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.SimpleGrainStatistic input = ((Orleans.Runtime.SimpleGrainStatistic)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloAddress, stream, typeof(Orleans.Runtime.SiloAddress));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.SimpleGrainStatistic result = new Orleans.Runtime.SimpleGrainStatistic();
            result.ActivationCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.GrainType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.SiloAddress), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.SimpleGrainStatistic), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_DetailedGrainReportSerialization
    {
        
        static Orleans_Runtime_DetailedGrainReportSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.DetailedGrainReport input = ((Orleans.Runtime.DetailedGrainReport)(original));
            Orleans.Runtime.DetailedGrainReport result = new Orleans.Runtime.DetailedGrainReport();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Grain = ((Orleans.Runtime.GrainId)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Grain)));
            result.GrainClassTypeName = input.GrainClassTypeName;
            result.LocalActivations = ((System.Collections.Generic.List<System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocalActivations)));
            result.LocalCacheActivationAddresses = ((System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocalCacheActivationAddresses)));
            result.LocalDirectoryActivationAddresses = ((System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocalDirectoryActivationAddresses)));
            result.PrimaryForGrain = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.PrimaryForGrain)));
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SiloAddress)));
            result.SiloName = input.SiloName;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.DetailedGrainReport input = ((Orleans.Runtime.DetailedGrainReport)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Grain, stream, typeof(Orleans.Runtime.GrainId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainClassTypeName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocalActivations, stream, typeof(System.Collections.Generic.List<System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocalCacheActivationAddresses, stream, typeof(System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocalDirectoryActivationAddresses, stream, typeof(System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PrimaryForGrain, stream, typeof(Orleans.Runtime.SiloAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloAddress, stream, typeof(Orleans.Runtime.SiloAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.DetailedGrainReport result = new Orleans.Runtime.DetailedGrainReport();
            result.Grain = ((Orleans.Runtime.GrainId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GrainId), stream)));
            result.GrainClassTypeName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.LocalActivations = ((System.Collections.Generic.List<System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<System.String>), stream)));
            result.LocalCacheActivationAddresses = ((System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>), stream)));
            result.LocalDirectoryActivationAddresses = ((System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Orleans.Runtime.ActivationAddress>), stream)));
            result.PrimaryForGrain = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.SiloAddress), stream)));
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.SiloAddress), stream)));
            result.SiloName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.DetailedGrainReport), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_TickStatusSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Runtime_TickStatusSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.TickStatus input = ((Orleans.Runtime.TickStatus)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CurrentTickTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FirstTickTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Period, stream, typeof(System.TimeSpan));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.TickStatus result = default(Orleans.Runtime.TickStatus);
            object objResult = ((object)(result));
            object temp1 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.TickStatus), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.TickStatus).GetField("<CurrentTickTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.TickStatus).GetField("<FirstTickTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.TickStatus).GetField("<Period>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_GrainStatisticSerialization
    {
        
        static Orleans_Runtime_GrainStatisticSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.GrainStatistic input = ((Orleans.Runtime.GrainStatistic)(original));
            Orleans.Runtime.GrainStatistic result = new Orleans.Runtime.GrainStatistic();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ActivationCount = input.ActivationCount;
            result.GrainCount = input.GrainCount;
            result.GrainType = input.GrainType;
            result.SiloCount = input.SiloCount;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.GrainStatistic input = ((Orleans.Runtime.GrainStatistic)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloCount, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.GrainStatistic result = new Orleans.Runtime.GrainStatistic();
            result.ActivationCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.GrainCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.GrainType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.SiloCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.GrainStatistic), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_MessageSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        static Orleans_Runtime_MessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Message input = ((Orleans.Runtime.Message)(original));
            Orleans.Runtime.Message result = new Orleans.Runtime.Message();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.List<System.ArraySegment<System.Byte>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.List<System.ArraySegment<System.Byte>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.Dictionary<System.String,System.Object>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo4.GetValue(input))));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Orleans.Runtime.ActivationAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Orleans.Runtime.ActivationAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((Orleans.Runtime.ITimeInterval)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo7.GetValue(input))));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Message input = ((Orleans.Runtime.Message)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.List<System.ArraySegment<System.Byte>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(System.Collections.Generic.List<System.ArraySegment<System.Byte>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.Object>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(Orleans.Runtime.ActivationAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(Orleans.Runtime.ActivationAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(Orleans.Runtime.ITimeInterval));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Message result = new Orleans.Runtime.Message();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.List<System.ArraySegment<System.Byte>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<System.ArraySegment<System.Byte>>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.List<System.ArraySegment<System.Byte>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<System.ArraySegment<System.Byte>>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.Dictionary<System.String,System.Object>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.Object>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Orleans.Runtime.ActivationAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.ActivationAddress), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Orleans.Runtime.ActivationAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.ActivationAddress), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((Orleans.Runtime.ITimeInterval)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.ITimeInterval), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Message), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.Message).GetField("bodyBytes", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.Message).GetField("bodyObject", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.Message).GetField("headerBytes", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.Message).GetField("headers", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.Message).GetField("sendingAddress", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.Message).GetField("targetAddress", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.Runtime.Message).GetField("timeInterval", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
namespace Orleans
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class MembershipTableFactory
    {
        

                        public static Orleans.IMembershipTable GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IMembershipTable), -112743698, primaryKey));
                        }

                        public static Orleans.IMembershipTable GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IMembershipTable), -112743698, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.IMembershipTable GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IMembershipTable), -112743698, primaryKey));
                        }

                        public static Orleans.IMembershipTable GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IMembershipTable), -112743698, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IMembershipTable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MembershipTableReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IMembershipTable")]
        internal class MembershipTableReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IMembershipTable
        {
            

            public static Orleans.IMembershipTable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IMembershipTable) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IMembershipTable), (global::Orleans.Runtime.GrainReference gr) => { return new MembershipTableReference(gr);}, grainRef, -112743698);
            }
            
            protected internal MembershipTableReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MembershipTableReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -112743698;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IMembershipTable";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MembershipTableReference input = ((MembershipTableReference)(original));
                return ((MembershipTableReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MembershipTableReference input = ((MembershipTableReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MembershipTableReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MembershipTableMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Orleans.MembershipTableData> Orleans.IMembershipTable.ReadRow(Orleans.Runtime.SiloAddress @key)
            {

                return base.InvokeMethodAsync<Orleans.MembershipTableData>(-1440482971, new object[] {@key} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<Orleans.MembershipTableData> Orleans.IMembershipTable.ReadAll()
            {

                return base.InvokeMethodAsync<Orleans.MembershipTableData>(572429157, new object[] {} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<bool> Orleans.IMembershipTable.InsertRow(Orleans.MembershipEntry @entry, Orleans.TableVersion @tableVersion)
            {

                return base.InvokeMethodAsync<System.Boolean>(-1925884676, new object[] {@entry, @tableVersion} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<bool> Orleans.IMembershipTable.UpdateRow(Orleans.MembershipEntry @entry, string @etag, Orleans.TableVersion @tableVersion)
            {

                return base.InvokeMethodAsync<System.Boolean>(1964092804, new object[] {@entry, @etag, @tableVersion} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task Orleans.IMembershipTable.UpdateIAmAlive(Orleans.MembershipEntry @entry)
            {

                return base.InvokeMethodAsync<object>(-1315256828, new object[] {@entry} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IMembershipTable", -112743698)]
    internal class MembershipTableMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -112743698;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -112743698:  // IMembershipTable
                        switch (methodId)
                        {
                            case -1440482971: 
                                return ((IMembershipTable)grain).ReadRow((SiloAddress)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 572429157: 
                                return ((IMembershipTable)grain).ReadAll().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1925884676: 
                                return ((IMembershipTable)grain).InsertRow((MembershipEntry)arguments[0], (TableVersion)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1964092804: 
                                return ((IMembershipTable)grain).UpdateRow((MembershipEntry)arguments[0], (String)arguments[1], (TableVersion)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1315256828: 
                                return ((IMembershipTable)grain).UpdateIAmAlive((MembershipEntry)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -112743698:  // IMembershipTable
                    switch (methodId)
                    {
                        case -1440482971:
                            return "ReadRow";
                    case 572429157:
                            return "ReadAll";
                    case -1925884676:
                            return "InsertRow";
                    case 1964092804:
                            return "UpdateRow";
                    case -1315256828:
                            return "UpdateIAmAlive";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class ReminderTableFactory
    {
        

                        public static Orleans.IReminderTable GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IReminderTable), 596859315, primaryKey));
                        }

                        public static Orleans.IReminderTable GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IReminderTable), 596859315, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.IReminderTable GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IReminderTable), 596859315, primaryKey));
                        }

                        public static Orleans.IReminderTable GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IReminderTable), 596859315, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IReminderTable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ReminderTableReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IReminderTable")]
        internal class ReminderTableReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IReminderTable
        {
            

            public static Orleans.IReminderTable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IReminderTable) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IReminderTable), (global::Orleans.Runtime.GrainReference gr) => { return new ReminderTableReference(gr);}, grainRef, 596859315);
            }
            
            protected internal ReminderTableReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ReminderTableReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 596859315;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IReminderTable";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ReminderTableReference input = ((ReminderTableReference)(original));
                return ((ReminderTableReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ReminderTableReference input = ((ReminderTableReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ReminderTableReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ReminderTableMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.IReminderTable.Init()
            {

                return base.InvokeMethodAsync<object>(-1925673939, new object[] {} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<Orleans.ReminderTableData> Orleans.IReminderTable.ReadRows(Orleans.Runtime.GrainReference @key)
            {

                return base.InvokeMethodAsync<Orleans.ReminderTableData>(-355259193, new object[] {@key} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<Orleans.ReminderTableData> Orleans.IReminderTable.ReadRows(uint @begin, uint @end)
            {

                return base.InvokeMethodAsync<Orleans.ReminderTableData>(-497403264, new object[] {@begin, @end} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<Orleans.ReminderEntry> Orleans.IReminderTable.ReadRow(Orleans.Runtime.GrainReference @grainRef, string @reminderName)
            {

                return base.InvokeMethodAsync<Orleans.ReminderEntry>(1312340311, new object[] {@grainRef, @reminderName} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<string> Orleans.IReminderTable.UpsertRow(Orleans.ReminderEntry @entry)
            {

                return base.InvokeMethodAsync<System.String>(-1664645999, new object[] {@entry} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task<bool> Orleans.IReminderTable.RemoveRow(Orleans.Runtime.GrainReference @grainRef, string @reminderName, string @eTag)
            {

                return base.InvokeMethodAsync<System.Boolean>(-1912556377, new object[] {@grainRef, @reminderName, @eTag} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
            
            System.Threading.Tasks.Task Orleans.IReminderTable.TestOnlyClearTable()
            {

                return base.InvokeMethodAsync<object>(120951690, new object[] {} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.Unordered);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IReminderTable", 596859315)]
    internal class ReminderTableMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 596859315;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 596859315:  // IReminderTable
                        switch (methodId)
                        {
                            case -1925673939: 
                                return ((IReminderTable)grain).Init().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -355259193: 
                                return ((IReminderTable)grain).ReadRows((GrainReference)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -497403264: 
                                return ((IReminderTable)grain).ReadRows((UInt32)arguments[0], (UInt32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1312340311: 
                                return ((IReminderTable)grain).ReadRow((GrainReference)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1664645999: 
                                return ((IReminderTable)grain).UpsertRow((ReminderEntry)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1912556377: 
                                return ((IReminderTable)grain).RemoveRow((GrainReference)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 120951690: 
                                return ((IReminderTable)grain).TestOnlyClearTable().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 596859315:  // IReminderTable
                    switch (methodId)
                    {
                        case -1925673939:
                            return "Init";
                    case -355259193:
                            return "ReadRows";
                    case -497403264:
                            return "ReadRows";
                    case 1312340311:
                            return "ReadRow";
                    case -1664645999:
                            return "UpsertRow";
                    case -1912556377:
                            return "RemoveRow";
                    case 120951690:
                            return "TestOnlyClearTable";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class ReminderServiceFactory
    {
        

            public static Orleans.IReminderService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return ReminderServiceReference.Cast(grainRef);
            }
            internal static Orleans.IReminderService GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IReminderService")]
        internal class ReminderServiceReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IReminderService
        {
            

            public static Orleans.IReminderService Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IReminderService) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IReminderService), (global::Orleans.Runtime.GrainReference gr) => { return new ReminderServiceReference(gr);}, grainRef, 1450843817);
            }
            
            protected internal ReminderServiceReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ReminderServiceReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1450843817;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IReminderService";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ReminderServiceReference input = ((ReminderServiceReference)(original));
                return ((ReminderServiceReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ReminderServiceReference input = ((ReminderServiceReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ReminderServiceReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ReminderServiceMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.IReminderService.Start()
            {

                return base.InvokeMethodAsync<object>(1420312199, new object[] {} );
            }
            
            System.Threading.Tasks.Task Orleans.IReminderService.Stop()
            {

                return base.InvokeMethodAsync<object>(-1505116304, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.IGrainReminder> Orleans.IReminderService.RegisterOrUpdateReminder(Orleans.Runtime.GrainReference @grainRef, string @reminderName, System.TimeSpan @dueTime, System.TimeSpan @period)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.IGrainReminder>(1588772828, new object[] {@grainRef, @reminderName, @dueTime, @period} );
            }
            
            System.Threading.Tasks.Task Orleans.IReminderService.UnregisterReminder(Orleans.Runtime.IGrainReminder @reminder)
            {

                return base.InvokeMethodAsync<object>(622645164, new object[] {@reminder} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.IGrainReminder> Orleans.IReminderService.GetReminder(Orleans.Runtime.GrainReference @grainRef, string @reminderName)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.IGrainReminder>(2144663751, new object[] {@grainRef, @reminderName} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<Orleans.Runtime.IGrainReminder>> Orleans.IReminderService.GetReminders(Orleans.Runtime.GrainReference @grainRef)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<Orleans.Runtime.IGrainReminder>>(-1913437315, new object[] {@grainRef} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IReminderService", 1450843817)]
    internal class ReminderServiceMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1450843817;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1450843817:  // IReminderService
                        switch (methodId)
                        {
                            case 1420312199: 
                                return ((IReminderService)grain).Start().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1505116304: 
                                return ((IReminderService)grain).Stop().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1588772828: 
                                return ((IReminderService)grain).RegisterOrUpdateReminder((GrainReference)arguments[0], (String)arguments[1], (TimeSpan)arguments[2], (TimeSpan)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 622645164: 
                                return ((IReminderService)grain).UnregisterReminder((IGrainReminder)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2144663751: 
                                return ((IReminderService)grain).GetReminder((GrainReference)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1913437315: 
                                return ((IReminderService)grain).GetReminders((GrainReference)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1450843817:  // IReminderService
                    switch (methodId)
                    {
                        case 1420312199:
                            return "Start";
                    case -1505116304:
                            return "Stop";
                    case 1588772828:
                            return "RegisterOrUpdateReminder";
                    case 622645164:
                            return "UnregisterReminder";
                    case 2144663751:
                            return "GetReminder";
                    case -1913437315:
                            return "GetReminders";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class SiloControlFactory
    {
        

            public static Orleans.ISiloControl Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return SiloControlReference.Cast(grainRef);
            }
            internal static Orleans.ISiloControl GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.ISiloControl")]
        internal class SiloControlReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.ISiloControl
        {
            

            public static Orleans.ISiloControl Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.ISiloControl) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.ISiloControl), (global::Orleans.Runtime.GrainReference gr) => { return new SiloControlReference(gr);}, grainRef, -48122956);
            }
            
            protected internal SiloControlReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SiloControlReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -48122956;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.ISiloControl";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SiloControlReference input = ((SiloControlReference)(original));
                return ((SiloControlReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SiloControlReference input = ((SiloControlReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SiloControlReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SiloControlMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.Ping(string @message)
            {

                return base.InvokeMethodAsync<object>(1328855378, new object[] {@message} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.SetSystemLogLevel(int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(-1376618190, new object[] {@traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.SetAppLogLevel(int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(-1564002097, new object[] {@traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.SetLogLevel(string @logName, int @traceLevel)
            {

                return base.InvokeMethodAsync<object>(1478092477, new object[] {@logName, @traceLevel} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.ForceGarbageCollection()
            {

                return base.InvokeMethodAsync<object>(1478133812, new object[] {} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.ForceActivationCollection(System.TimeSpan @ageLimit)
            {

                return base.InvokeMethodAsync<object>(-2082132213, new object[] {@ageLimit} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.ForceRuntimeStatisticsCollection()
            {

                return base.InvokeMethodAsync<object>(20725113, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.SiloRuntimeStatistics> Orleans.ISiloControl.GetRuntimeStatistics()
            {

                return base.InvokeMethodAsync<Orleans.Runtime.SiloRuntimeStatistics>(1041905033, new object[] {} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.GrainId, string, int>>> Orleans.ISiloControl.GetGrainStatistics()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<System.Tuple<Orleans.Runtime.GrainId,System.String,System.Int32>>>(174208232, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.SimpleGrainStatistic[]> Orleans.ISiloControl.GetSimpleGrainStatistics()
            {

                return base.InvokeMethodAsync<Orleans.Runtime.SimpleGrainStatistic[]>(-1434082603, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Orleans.Runtime.DetailedGrainReport> Orleans.ISiloControl.GetDetailedGrainReport(Orleans.Runtime.GrainId @grainId)
            {

                return base.InvokeMethodAsync<Orleans.Runtime.DetailedGrainReport>(903115134, new object[] {@grainId} );
            }
            
            System.Threading.Tasks.Task Orleans.ISiloControl.UpdateConfiguration(string @configuration)
            {

                return base.InvokeMethodAsync<object>(1634125253, new object[] {@configuration} );
            }
            
            System.Threading.Tasks.Task<int> Orleans.ISiloControl.GetActivationCount()
            {

                return base.InvokeMethodAsync<System.Int32>(-1522955713, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.ISiloControl", -48122956)]
    internal class SiloControlMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -48122956;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -48122956:  // ISiloControl
                        switch (methodId)
                        {
                            case 1328855378: 
                                return ((ISiloControl)grain).Ping((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1376618190: 
                                return ((ISiloControl)grain).SetSystemLogLevel((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1564002097: 
                                return ((ISiloControl)grain).SetAppLogLevel((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1478092477: 
                                return ((ISiloControl)grain).SetLogLevel((String)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1478133812: 
                                return ((ISiloControl)grain).ForceGarbageCollection().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2082132213: 
                                return ((ISiloControl)grain).ForceActivationCollection((TimeSpan)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 20725113: 
                                return ((ISiloControl)grain).ForceRuntimeStatisticsCollection().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1041905033: 
                                return ((ISiloControl)grain).GetRuntimeStatistics().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 174208232: 
                                return ((ISiloControl)grain).GetGrainStatistics().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1434082603: 
                                return ((ISiloControl)grain).GetSimpleGrainStatistics().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 903115134: 
                                return ((ISiloControl)grain).GetDetailedGrainReport((GrainId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1634125253: 
                                return ((ISiloControl)grain).UpdateConfiguration((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1522955713: 
                                return ((ISiloControl)grain).GetActivationCount().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -48122956:  // ISiloControl
                    switch (methodId)
                    {
                        case 1328855378:
                            return "Ping";
                    case -1376618190:
                            return "SetSystemLogLevel";
                    case -1564002097:
                            return "SetAppLogLevel";
                    case 1478092477:
                            return "SetLogLevel";
                    case 1478133812:
                            return "ForceGarbageCollection";
                    case -2082132213:
                            return "ForceActivationCollection";
                    case 20725113:
                            return "ForceRuntimeStatisticsCollection";
                    case 1041905033:
                            return "GetRuntimeStatistics";
                    case 174208232:
                            return "GetGrainStatistics";
                    case -1434082603:
                            return "GetSimpleGrainStatistics";
                    case 903115134:
                            return "GetDetailedGrainReport";
                    case 1634125253:
                            return "UpdateConfiguration";
                    case -1522955713:
                            return "GetActivationCount";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RemindableFactory
    {
        

                        public static Orleans.IRemindable GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IRemindable), -831689659, primaryKey));
                        }

                        public static Orleans.IRemindable GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IRemindable), -831689659, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.IRemindable GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IRemindable), -831689659, primaryKey));
                        }

                        public static Orleans.IRemindable GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IRemindable), -831689659, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IRemindable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RemindableReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IRemindable")]
        internal class RemindableReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IRemindable
        {
            

            public static Orleans.IRemindable Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IRemindable) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IRemindable), (global::Orleans.Runtime.GrainReference gr) => { return new RemindableReference(gr);}, grainRef, -831689659);
            }
            
            protected internal RemindableReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RemindableReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -831689659;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IRemindable";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RemindableReference input = ((RemindableReference)(original));
                return ((RemindableReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RemindableReference input = ((RemindableReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RemindableReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RemindableMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.IRemindable.ReceiveReminder(string @reminderName, Orleans.Runtime.TickStatus @status)
            {

                return base.InvokeMethodAsync<object>(-1573596583, new object[] {@reminderName, @status} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IRemindable", -831689659)]
    internal class RemindableMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -831689659;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -831689659:  // IRemindable
                        switch (methodId)
                        {
                            case -1573596583: 
                                return ((IRemindable)grain).ReceiveReminder((String)arguments[0], (TickStatus)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -831689659:  // IRemindable
                    switch (methodId)
                    {
                        case -1573596583:
                            return "ReceiveReminder";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainWithGuidKeyFactory
    {
        

                        public static Orleans.IGrainWithGuidKey GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithGuidKey), -1097320095, primaryKey));
                        }

                        public static Orleans.IGrainWithGuidKey GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithGuidKey), -1097320095, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IGrainWithGuidKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainWithGuidKeyReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IGrainWithGuidKey")]
        internal class GrainWithGuidKeyReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IGrainWithGuidKey
        {
            

            public static Orleans.IGrainWithGuidKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IGrainWithGuidKey) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IGrainWithGuidKey), (global::Orleans.Runtime.GrainReference gr) => { return new GrainWithGuidKeyReference(gr);}, grainRef, -1097320095);
            }
            
            protected internal GrainWithGuidKeyReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainWithGuidKeyReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1097320095;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IGrainWithGuidKey";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainWithGuidKeyReference input = ((GrainWithGuidKeyReference)(original));
                return ((GrainWithGuidKeyReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainWithGuidKeyReference input = ((GrainWithGuidKeyReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainWithGuidKeyReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainWithGuidKeyMethodInvoker.GetMethodName(interfaceId, methodId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IGrainWithGuidKey", -1097320095)]
    internal class GrainWithGuidKeyMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1097320095;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainWithIntegerKeyFactory
    {
        

                        public static Orleans.IGrainWithIntegerKey GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithIntegerKey), 1928988877, primaryKey));
                        }

                        public static Orleans.IGrainWithIntegerKey GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithIntegerKey), 1928988877, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IGrainWithIntegerKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainWithIntegerKeyReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IGrainWithIntegerKey")]
        internal class GrainWithIntegerKeyReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IGrainWithIntegerKey
        {
            

            public static Orleans.IGrainWithIntegerKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IGrainWithIntegerKey) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IGrainWithIntegerKey), (global::Orleans.Runtime.GrainReference gr) => { return new GrainWithIntegerKeyReference(gr);}, grainRef, 1928988877);
            }
            
            protected internal GrainWithIntegerKeyReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainWithIntegerKeyReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1928988877;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IGrainWithIntegerKey";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainWithIntegerKeyReference input = ((GrainWithIntegerKeyReference)(original));
                return ((GrainWithIntegerKeyReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainWithIntegerKeyReference input = ((GrainWithIntegerKeyReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainWithIntegerKeyReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainWithIntegerKeyMethodInvoker.GetMethodName(interfaceId, methodId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IGrainWithIntegerKey", 1928988877)]
    internal class GrainWithIntegerKeyMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1928988877;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1928988877:  // IGrainWithIntegerKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1928988877:  // IGrainWithIntegerKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainWithStringKeyFactory
    {
        

                        public static Orleans.IGrainWithStringKey GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithStringKey), -1277021679, primaryKey));
                        }

                        public static Orleans.IGrainWithStringKey GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.IGrainWithStringKey), -1277021679, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.IGrainWithStringKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainWithStringKeyReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Orleans.IGrainWithStringKey")]
        internal class GrainWithStringKeyReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.IGrainWithStringKey
        {
            

            public static Orleans.IGrainWithStringKey Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.IGrainWithStringKey) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.IGrainWithStringKey), (global::Orleans.Runtime.GrainReference gr) => { return new GrainWithStringKeyReference(gr);}, grainRef, -1277021679);
            }
            
            protected internal GrainWithStringKeyReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainWithStringKeyReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1277021679;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Orleans.IGrainWithStringKey";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainWithStringKeyReference input = ((GrainWithStringKeyReference)(original));
                return ((GrainWithStringKeyReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainWithStringKeyReference input = ((GrainWithStringKeyReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainWithStringKeyReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainWithStringKeyMethodInvoker.GetMethodName(interfaceId, methodId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Orleans.IGrainWithStringKey", -1277021679)]
    internal class GrainWithStringKeyMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1277021679;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_MembershipTableDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_MembershipTableDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.MembershipTableData input = ((Orleans.MembershipTableData)(original));
            Orleans.MembershipTableData result = ((Orleans.MembershipTableData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.MembershipTableData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Tuple<Orleans.MembershipEntry,System.String>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Members)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.TableVersion)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Version)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.MembershipTableData input = ((Orleans.MembershipTableData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Members, stream, typeof(System.Collections.Generic.IList<System.Tuple<Orleans.MembershipEntry,System.String>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Version, stream, typeof(Orleans.TableVersion));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.MembershipTableData result = ((Orleans.MembershipTableData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.MembershipTableData))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<System.Tuple<Orleans.MembershipEntry,System.String>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<System.Tuple<Orleans.MembershipEntry,System.String>>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.TableVersion)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.TableVersion), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.MembershipTableData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.MembershipTableData).GetField("<Members>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.MembershipTableData).GetField("<Version>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_MembershipEntrySerialization
    {
        
        static Orleans_MembershipEntrySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.MembershipEntry input = ((Orleans.MembershipEntry)(original));
            Orleans.MembershipEntry result = new Orleans.MembershipEntry();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.FaultZone = input.FaultZone;
            result.HostName = input.HostName;
            result.IAmAliveTime = input.IAmAliveTime;
            result.InstanceName = input.InstanceName;
            result.IsPrimary = input.IsPrimary;
            result.ProxyPort = input.ProxyPort;
            result.RoleName = input.RoleName;
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SiloAddress)));
            result.StartTime = input.StartTime;
            result.Status = input.Status;
            result.SuspectTimes = ((System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,System.DateTime>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SuspectTimes)));
            result.UpdateZone = input.UpdateZone;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.MembershipEntry input = ((Orleans.MembershipEntry)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FaultZone, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HostName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IAmAliveTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InstanceName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsPrimary, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProxyPort, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RoleName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloAddress, stream, typeof(Orleans.Runtime.SiloAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Status, stream, typeof(Orleans.Runtime.SiloStatus));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SuspectTimes, stream, typeof(System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,System.DateTime>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UpdateZone, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.MembershipEntry result = new Orleans.MembershipEntry();
            result.FaultZone = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.HostName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.IAmAliveTime = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.InstanceName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.IsPrimary = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.ProxyPort = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.RoleName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.SiloAddress = ((Orleans.Runtime.SiloAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.SiloAddress), stream)));
            result.StartTime = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.Status = ((Orleans.Runtime.SiloStatus)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.SiloStatus), stream)));
            result.SuspectTimes = ((System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,System.DateTime>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<System.Tuple<Orleans.Runtime.SiloAddress,System.DateTime>>), stream)));
            result.UpdateZone = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.MembershipEntry), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_TableVersionSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_TableVersionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.TableVersion input = ((Orleans.TableVersion)(original));
            Orleans.TableVersion result = ((Orleans.TableVersion)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.TableVersion))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.Version;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.VersionEtag;
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.TableVersion input = ((Orleans.TableVersion)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Version, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.VersionEtag, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.TableVersion result = ((Orleans.TableVersion)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.TableVersion))));
            object objResult = ((object)(result));
            object temp1 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.TableVersion), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.TableVersion).GetField("<Version>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.TableVersion).GetField("<VersionEtag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_ReminderTableDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_ReminderTableDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.ReminderTableData input = ((Orleans.ReminderTableData)(original));
            Orleans.ReminderTableData result = new Orleans.ReminderTableData();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<Orleans.ReminderEntry>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Reminders)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.ReminderTableData input = ((Orleans.ReminderTableData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Reminders, stream, typeof(System.Collections.Generic.IList<Orleans.ReminderEntry>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.ReminderTableData result = new Orleans.ReminderTableData();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IList<Orleans.ReminderEntry>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<Orleans.ReminderEntry>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.ReminderTableData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.ReminderTableData).GetField("<Reminders>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_ReminderEntrySerialization
    {
        
        static Orleans_ReminderEntrySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.ReminderEntry input = ((Orleans.ReminderEntry)(original));
            Orleans.ReminderEntry result = new Orleans.ReminderEntry();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ETag = input.ETag;
            result.GrainRef = ((Orleans.Runtime.GrainReference)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.GrainRef)));
            result.Period = input.Period;
            result.ReminderName = input.ReminderName;
            result.StartAt = input.StartAt;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.ReminderEntry input = ((Orleans.ReminderEntry)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainRef, stream, typeof(Orleans.Runtime.GrainReference));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Period, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReminderName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartAt, stream, typeof(System.DateTime));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.ReminderEntry result = new Orleans.ReminderEntry();
            result.ETag = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.GrainRef = ((Orleans.Runtime.GrainReference)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GrainReference), stream)));
            result.Period = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            result.ReminderName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.StartAt = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.ReminderEntry), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_ReminderDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_ReminderDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.ReminderData input = ((Orleans.ReminderData)(original));
            Orleans.ReminderData result = ((Orleans.ReminderData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.ReminderData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.ETag;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.GrainReference)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.GrainRef)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.ReminderName;
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.ReminderData input = ((Orleans.ReminderData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GrainRef, stream, typeof(Orleans.Runtime.GrainReference));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReminderName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.ReminderData result = ((Orleans.ReminderData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.ReminderData))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.GrainReference)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GrainReference), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.ReminderData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.ReminderData).GetField("<ETag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.ReminderData).GetField("<GrainRef>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.ReminderData).GetField("<ReminderName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ObserverSubscriptionManagerGenericMaster
    {
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.ObserverSubscriptionManager<>), ObserverSubscriptionManagerGenericMaster.GenericCopier, ObserverSubscriptionManagerGenericMaster.GenericSerializer, ObserverSubscriptionManagerGenericMaster.GenericDeserializer);
        }
        
        public static System.Type CreateConcreteType(System.Type[] typeParams)
        {
            return typeof(Orleans_ObserverSubscriptionManagerSerialization<>).MakeGenericType(typeParams);
        }
        
        public static object GenericCopier(object obj)
        {
            System.Type t = ObserverSubscriptionManagerGenericMaster.CreateConcreteType(obj.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("DeepCopier");
            object[] args = new object[] {
                    obj};
            return f.Invoke(null, args);
        }
        
        public static void GenericSerializer(object input, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            System.Type t = ObserverSubscriptionManagerGenericMaster.CreateConcreteType(input.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Serializer");
            object[] args = new object[] {
                    input,
                    stream,
                    expected};
            f.Invoke(null, args);
        }
        
        public static object GenericDeserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            System.Type t = ObserverSubscriptionManagerGenericMaster.CreateConcreteType(expected.GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Deserializer");
            object[] args = new object[] {
                    expected,
                    stream};
            return f.Invoke(null, args);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class Orleans_ObserverSubscriptionManagerSerialization<T>
        where T : Orleans.IGrainObserver
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_ObserverSubscriptionManagerSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.ObserverSubscriptionManager<T> input = ((Orleans.ObserverSubscriptionManager<T>)(original));
            Orleans.ObserverSubscriptionManager<T> result = new ObserverSubscriptionManager<T>();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.HashSet<T>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.ObserverSubscriptionManager<T> input = ((Orleans.ObserverSubscriptionManager<T>)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.HashSet<T>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.ObserverSubscriptionManager<T> result = new ObserverSubscriptionManager<T>();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.HashSet<T>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.HashSet<T>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.ObserverSubscriptionManager<T>), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.ObserverSubscriptionManager<T>).GetField("observers", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
namespace Orleans.Streams
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Orleans.Streams;
    using Orleans.Runtime;
    using Orleans;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class StreamQueueBalanceListenerFactory
    {
        

                        public static Orleans.Streams.IStreamQueueBalanceListener GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IStreamQueueBalanceListener), 2106004533, primaryKey));
                        }

                        public static Orleans.Streams.IStreamQueueBalanceListener GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IStreamQueueBalanceListener), 2106004533, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.Streams.IStreamQueueBalanceListener GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IStreamQueueBalanceListener), 2106004533, primaryKey));
                        }

                        public static Orleans.Streams.IStreamQueueBalanceListener GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IStreamQueueBalanceListener), 2106004533, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.Streams.IStreamQueueBalanceListener Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return StreamQueueBalanceListenerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IStreamQueueBalanceListener")]
        internal class StreamQueueBalanceListenerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IStreamQueueBalanceListener
        {
            

            public static Orleans.Streams.IStreamQueueBalanceListener Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IStreamQueueBalanceListener) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IStreamQueueBalanceListener), (global::Orleans.Runtime.GrainReference gr) => { return new StreamQueueBalanceListenerReference(gr);}, grainRef, 2106004533);
            }
            
            protected internal StreamQueueBalanceListenerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal StreamQueueBalanceListenerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2106004533;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IStreamQueueBalanceListener";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StreamQueueBalanceListenerReference input = ((StreamQueueBalanceListenerReference)(original));
                return ((StreamQueueBalanceListenerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StreamQueueBalanceListenerReference input = ((StreamQueueBalanceListenerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StreamQueueBalanceListenerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return StreamQueueBalanceListenerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamQueueBalanceListener.QueueDistributionChangeNotification()
            {

                return base.InvokeMethodAsync<object>(-1790343421, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IStreamQueueBalanceListener", 2106004533)]
    internal class StreamQueueBalanceListenerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2106004533;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2106004533:  // IStreamQueueBalanceListener
                        switch (methodId)
                        {
                            case -1790343421: 
                                return ((IStreamQueueBalanceListener)grain).QueueDistributionChangeNotification().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2106004533:  // IStreamQueueBalanceListener
                    switch (methodId)
                    {
                        case -1790343421:
                            return "QueueDistributionChangeNotification";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class StreamConsumerExtensionFactory
    {
        

            public static Orleans.Streams.IStreamConsumerExtension Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return StreamConsumerExtensionReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<Orleans.Streams.IStreamConsumerExtension> CreateObjectReference(Orleans.Streams.IStreamConsumerExtension obj)
        {
            if (methodInvoker == null) methodInvoker = new StreamConsumerExtensionMethodInvoker();
            return StreamConsumerExtensionFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(Orleans.Streams.IStreamConsumerExtension reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IStreamConsumerExtension")]
        internal class StreamConsumerExtensionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IStreamConsumerExtension
        {
            

            public static Orleans.Streams.IStreamConsumerExtension Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IStreamConsumerExtension) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IStreamConsumerExtension), (global::Orleans.Runtime.GrainReference gr) => { return new StreamConsumerExtensionReference(gr);}, grainRef, 1208535911);
            }
            
            protected internal StreamConsumerExtensionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal StreamConsumerExtensionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1208535911;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IStreamConsumerExtension";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StreamConsumerExtensionReference input = ((StreamConsumerExtensionReference)(original));
                return ((StreamConsumerExtensionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StreamConsumerExtensionReference input = ((StreamConsumerExtensionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StreamConsumerExtensionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return StreamConsumerExtensionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamConsumerExtension.DeliverItem(Orleans.Runtime.GuidId @subscriptionId, Orleans.Concurrency.Immutable<Object> @item, Orleans.Streams.StreamSequenceToken @token)
            {

                return base.InvokeMethodAsync<object>(432381955, new object[] {@subscriptionId, @item, @token} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamConsumerExtension.DeliverBatch(Orleans.Runtime.GuidId @subscriptionId, Orleans.Concurrency.Immutable<IBatchContainer> @item)
            {

                return base.InvokeMethodAsync<object>(-2142965962, new object[] {@subscriptionId, @item} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamConsumerExtension.CompleteStream(Orleans.Runtime.GuidId @subscriptionId)
            {

                return base.InvokeMethodAsync<object>(-627903062, new object[] {@subscriptionId} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamConsumerExtension.ErrorInStream(Orleans.Runtime.GuidId @subscriptionId, System.Exception @exc)
            {

                return base.InvokeMethodAsync<object>(-1893107802, new object[] {@subscriptionId, @exc} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IStreamConsumerExtension", 1208535911)]
    internal class StreamConsumerExtensionMethodInvoker : global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1208535911;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1208535911:  // IStreamConsumerExtension
                        switch (methodId)
                        {
                            case 432381955: 
                                return ((IStreamConsumerExtension)grain).DeliverItem((GuidId)arguments[0], (Orleans.Concurrency.Immutable<Object>)arguments[1], (StreamSequenceToken)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2142965962: 
                                return ((IStreamConsumerExtension)grain).DeliverBatch((GuidId)arguments[0], (Orleans.Concurrency.Immutable<IBatchContainer>)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -627903062: 
                                return ((IStreamConsumerExtension)grain).CompleteStream((GuidId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1893107802: 
                                return ((IStreamConsumerExtension)grain).ErrorInStream((GuidId)arguments[0], (Exception)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker.Invoke(global::Orleans.Runtime.IGrainExtension grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1208535911:  // IStreamConsumerExtension
                        switch (methodId)
                        {
                            case 432381955: 
                                return ((IStreamConsumerExtension)grain).DeliverItem((GuidId)arguments[0], (Orleans.Concurrency.Immutable<Object>)arguments[1], (StreamSequenceToken)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2142965962: 
                                return ((IStreamConsumerExtension)grain).DeliverBatch((GuidId)arguments[0], (Orleans.Concurrency.Immutable<IBatchContainer>)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -627903062: 
                                return ((IStreamConsumerExtension)grain).CompleteStream((GuidId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1893107802: 
                                return ((IStreamConsumerExtension)grain).ErrorInStream((GuidId)arguments[0], (Exception)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1208535911:  // IStreamConsumerExtension
                    switch (methodId)
                    {
                        case 432381955:
                            return "DeliverItem";
                    case -2142965962:
                            return "DeliverBatch";
                    case -627903062:
                            return "CompleteStream";
                    case -1893107802:
                            return "ErrorInStream";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class StreamProducerExtensionFactory
    {
        

            public static Orleans.Streams.IStreamProducerExtension Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return StreamProducerExtensionReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<Orleans.Streams.IStreamProducerExtension> CreateObjectReference(Orleans.Streams.IStreamProducerExtension obj)
        {
            if (methodInvoker == null) methodInvoker = new StreamProducerExtensionMethodInvoker();
            return StreamProducerExtensionFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(Orleans.Streams.IStreamProducerExtension reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IStreamProducerExtension")]
        internal class StreamProducerExtensionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IStreamProducerExtension
        {
            

            public static Orleans.Streams.IStreamProducerExtension Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IStreamProducerExtension) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IStreamProducerExtension), (global::Orleans.Runtime.GrainReference gr) => { return new StreamProducerExtensionReference(gr);}, grainRef, 939373632);
            }
            
            protected internal StreamProducerExtensionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal StreamProducerExtensionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 939373632;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IStreamProducerExtension";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StreamProducerExtensionReference input = ((StreamProducerExtensionReference)(original));
                return ((StreamProducerExtensionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StreamProducerExtensionReference input = ((StreamProducerExtensionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StreamProducerExtensionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return StreamProducerExtensionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamProducerExtension.AddSubscriber(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamConsumerExtension @streamConsumer, Orleans.Streams.StreamSequenceToken @token, Orleans.Streams.IStreamFilterPredicateWrapper @filter)
            {

                return base.InvokeMethodAsync<object>(-181257391, new object[] {@subscriptionId, @streamId, @streamConsumer is global::Orleans.Grain ? @streamConsumer.AsReference<Orleans.Streams.IStreamConsumerExtension>() : @streamConsumer, @token, @filter} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.AlwaysInterleave);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamProducerExtension.RemoveSubscriber(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<object>(-1759922013, new object[] {@subscriptionId, @streamId} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.AlwaysInterleave);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IStreamProducerExtension", 939373632)]
    internal class StreamProducerExtensionMethodInvoker : global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 939373632;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 939373632:  // IStreamProducerExtension
                        switch (methodId)
                        {
                            case -181257391: 
                                return ((IStreamProducerExtension)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IStreamProducerExtension)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker.Invoke(global::Orleans.Runtime.IGrainExtension grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 939373632:  // IStreamProducerExtension
                        switch (methodId)
                        {
                            case -181257391: 
                                return ((IStreamProducerExtension)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IStreamProducerExtension)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 939373632:  // IStreamProducerExtension
                    switch (methodId)
                    {
                        case -181257391:
                            return "AddSubscriber";
                    case -1759922013:
                            return "RemoveSubscriber";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class PersistentStreamPullingAgentFactory
    {
        

                        public static Orleans.Streams.IPersistentStreamPullingAgent GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IPersistentStreamPullingAgent), -2083502648, primaryKey));
                        }

                        public static Orleans.Streams.IPersistentStreamPullingAgent GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IPersistentStreamPullingAgent), -2083502648, primaryKey, grainClassNamePrefix));
                        }

                        public static Orleans.Streams.IPersistentStreamPullingAgent GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IPersistentStreamPullingAgent), -2083502648, primaryKey));
                        }

                        public static Orleans.Streams.IPersistentStreamPullingAgent GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Orleans.Streams.IPersistentStreamPullingAgent), -2083502648, primaryKey, grainClassNamePrefix));
                        }

            public static Orleans.Streams.IPersistentStreamPullingAgent Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return PersistentStreamPullingAgentReference.Cast(grainRef);
            }
            internal static Orleans.Streams.IPersistentStreamPullingAgent GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IPersistentStreamPullingAgent")]
        internal class PersistentStreamPullingAgentReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IPersistentStreamPullingAgent
        {
            

            public static Orleans.Streams.IPersistentStreamPullingAgent Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IPersistentStreamPullingAgent) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IPersistentStreamPullingAgent), (global::Orleans.Runtime.GrainReference gr) => { return new PersistentStreamPullingAgentReference(gr);}, grainRef, -2083502648);
            }
            
            protected internal PersistentStreamPullingAgentReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PersistentStreamPullingAgentReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -2083502648;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IPersistentStreamPullingAgent";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PersistentStreamPullingAgentReference input = ((PersistentStreamPullingAgentReference)(original));
                return ((PersistentStreamPullingAgentReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PersistentStreamPullingAgentReference input = ((PersistentStreamPullingAgentReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PersistentStreamPullingAgentReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 939373632));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PersistentStreamPullingAgentMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPersistentStreamPullingAgent.Initialize(Orleans.Concurrency.Immutable<IQueueAdapter> @queueAdapter)
            {

                return base.InvokeMethodAsync<object>(-166879657, new object[] {@queueAdapter} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPersistentStreamPullingAgent.Shutdown()
            {

                return base.InvokeMethodAsync<object>(-2097507506, new object[] {} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamProducerExtension.AddSubscriber(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamConsumerExtension @streamConsumer, Orleans.Streams.StreamSequenceToken @token, Orleans.Streams.IStreamFilterPredicateWrapper @filter)
            {

                return base.InvokeMethodAsync<object>(-181257391, new object[] {@subscriptionId, @streamId, @streamConsumer is global::Orleans.Grain ? @streamConsumer.AsReference<Orleans.Streams.IStreamConsumerExtension>() : @streamConsumer, @token, @filter} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.AlwaysInterleave);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IStreamProducerExtension.RemoveSubscriber(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<object>(-1759922013, new object[] {@subscriptionId, @streamId} , options:  global::Orleans.CodeGeneration.InvokeMethodOptions.AlwaysInterleave);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IPersistentStreamPullingAgent", -2083502648)]
    internal class PersistentStreamPullingAgentMethodInvoker : global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -2083502648;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2083502648:  // IPersistentStreamPullingAgent
                        switch (methodId)
                        {
                            case -166879657: 
                                return ((IPersistentStreamPullingAgent)grain).Initialize((Orleans.Concurrency.Immutable<IQueueAdapter>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2097507506: 
                                return ((IPersistentStreamPullingAgent)grain).Shutdown().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -181257391: 
                                return ((IPersistentStreamPullingAgent)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IPersistentStreamPullingAgent)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 939373632:  // IStreamProducerExtension
                        switch (methodId)
                        {
                            case -181257391: 
                                return ((IStreamProducerExtension)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IStreamProducerExtension)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainExtensionMethodInvoker.Invoke(global::Orleans.Runtime.IGrainExtension grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2083502648:  // IPersistentStreamPullingAgent
                        switch (methodId)
                        {
                            case -166879657: 
                                return ((IPersistentStreamPullingAgent)grain).Initialize((Orleans.Concurrency.Immutable<IQueueAdapter>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2097507506: 
                                return ((IPersistentStreamPullingAgent)grain).Shutdown().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -181257391: 
                                return ((IPersistentStreamPullingAgent)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IPersistentStreamPullingAgent)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 939373632:  // IStreamProducerExtension
                        switch (methodId)
                        {
                            case -181257391: 
                                return ((IStreamProducerExtension)grain).AddSubscriber((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1759922013: 
                                return ((IStreamProducerExtension)grain).RemoveSubscriber((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -2083502648:  // IPersistentStreamPullingAgent
                    switch (methodId)
                    {
                        case -166879657:
                            return "Initialize";
                    case -2097507506:
                            return "Shutdown";
                    case -181257391:
                            return "AddSubscriber";
                    case -1759922013:
                            return "RemoveSubscriber";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 939373632:  // IStreamProducerExtension
                    switch (methodId)
                    {
                        case -181257391:
                            return "AddSubscriber";
                    case -1759922013:
                            return "RemoveSubscriber";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class PersistentStreamPullingManagerFactory
    {
        

            public static Orleans.Streams.IPersistentStreamPullingManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                if(!((global::Orleans.Runtime.GrainReference)grainRef).IsInitializedSystemTarget)
                        throw new InvalidOperationException("InvalidCastException cast of a system target grain reference. Must have SystemTargetSilo set to the target silo address");
                return PersistentStreamPullingManagerReference.Cast(grainRef);
            }
            internal static Orleans.Streams.IPersistentStreamPullingManager GetSystemTarget(global::Orleans.Runtime.GrainId grainId, global::Orleans.Runtime.SiloAddress silo)
            {
                return global::Orleans.Runtime.GrainReference.GetSystemTarget(grainId, silo, Cast);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IPersistentStreamPullingManager")]
        internal class PersistentStreamPullingManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IPersistentStreamPullingManager
        {
            

            public static Orleans.Streams.IPersistentStreamPullingManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IPersistentStreamPullingManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IPersistentStreamPullingManager), (global::Orleans.Runtime.GrainReference gr) => { return new PersistentStreamPullingManagerReference(gr);}, grainRef, 789366386);
            }
            
            protected internal PersistentStreamPullingManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PersistentStreamPullingManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 789366386;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IPersistentStreamPullingManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PersistentStreamPullingManagerReference input = ((PersistentStreamPullingManagerReference)(original));
                return ((PersistentStreamPullingManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PersistentStreamPullingManagerReference input = ((PersistentStreamPullingManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PersistentStreamPullingManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PersistentStreamPullingManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPersistentStreamPullingManager.Initialize(Orleans.Concurrency.Immutable<IQueueAdapter> @queueAdapter)
            {

                return base.InvokeMethodAsync<object>(-166879657, new object[] {@queueAdapter} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IPersistentStreamPullingManager", 789366386)]
    internal class PersistentStreamPullingManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 789366386;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 789366386:  // IPersistentStreamPullingManager
                        switch (methodId)
                        {
                            case -166879657: 
                                return ((IPersistentStreamPullingManager)grain).Initialize((Orleans.Concurrency.Immutable<IQueueAdapter>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 789366386:  // IPersistentStreamPullingManager
                    switch (methodId)
                    {
                        case -166879657:
                            return "Initialize";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class PubSubRendezvousGrainFactory
    {
        

                        public static Orleans.Streams.IPubSubRendezvousGrain GetGrain(long primaryKey, string keyExt)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(Orleans.Streams.IPubSubRendezvousGrain), 1746702088, primaryKey, keyExt));
                        }

                        public static Orleans.Streams.IPubSubRendezvousGrain GetGrain(long primaryKey, string keyExt, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(Orleans.Streams.IPubSubRendezvousGrain), 1746702088, primaryKey, keyExt, grainClassNamePrefix));
                        }

                        public static Orleans.Streams.IPubSubRendezvousGrain GetGrain(System.Guid primaryKey, string keyExt)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(Orleans.Streams.IPubSubRendezvousGrain), 1746702088, primaryKey, keyExt));
                        }

                        public static Orleans.Streams.IPubSubRendezvousGrain GetGrain(System.Guid primaryKey, string keyExt, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(Orleans.Streams.IPubSubRendezvousGrain), 1746702088, primaryKey, keyExt,grainClassNamePrefix));
                        }

            public static Orleans.Streams.IPubSubRendezvousGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PubSubRendezvousGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Orleans.Streams.Orleans.Streams.IPubSubRendezvousGrain")]
        internal class PubSubRendezvousGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Orleans.Streams.IPubSubRendezvousGrain
        {
            

            public static Orleans.Streams.IPubSubRendezvousGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Orleans.Streams.IPubSubRendezvousGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Orleans.Streams.IPubSubRendezvousGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PubSubRendezvousGrainReference(gr);}, grainRef, 1746702088);
            }
            
            protected internal PubSubRendezvousGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PubSubRendezvousGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1746702088;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Orleans.Streams.Orleans.Streams.IPubSubRendezvousGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PubSubRendezvousGrainReference input = ((PubSubRendezvousGrainReference)(original));
                return ((PubSubRendezvousGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PubSubRendezvousGrainReference input = ((PubSubRendezvousGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PubSubRendezvousGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PubSubRendezvousGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.ISet<Orleans.Streams.PubSubSubscriptionState>> Orleans.Streams.IPubSubRendezvousGrain.RegisterProducer(Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamProducerExtension @streamProducer)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.ISet<Orleans.Streams.PubSubSubscriptionState>>(912534711, new object[] {@streamId, @streamProducer is global::Orleans.Grain ? @streamProducer.AsReference<Orleans.Streams.IStreamProducerExtension>() : @streamProducer} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPubSubRendezvousGrain.UnregisterProducer(Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamProducerExtension @streamProducer)
            {

                return base.InvokeMethodAsync<object>(1454606735, new object[] {@streamId, @streamProducer is global::Orleans.Grain ? @streamProducer.AsReference<Orleans.Streams.IStreamProducerExtension>() : @streamProducer} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPubSubRendezvousGrain.RegisterConsumer(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamConsumerExtension @streamConsumer, Orleans.Streams.StreamSequenceToken @token, Orleans.Streams.IStreamFilterPredicateWrapper @filter)
            {

                return base.InvokeMethodAsync<object>(-544360167, new object[] {@subscriptionId, @streamId, @streamConsumer is global::Orleans.Grain ? @streamConsumer.AsReference<Orleans.Streams.IStreamConsumerExtension>() : @streamConsumer, @token, @filter} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPubSubRendezvousGrain.UnregisterConsumer(Orleans.Runtime.GuidId @subscriptionId, Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<object>(1942100900, new object[] {@subscriptionId, @streamId} );
            }
            
            System.Threading.Tasks.Task<int> Orleans.Streams.IPubSubRendezvousGrain.ProducerCount(Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<System.Int32>(687623645, new object[] {@streamId} );
            }
            
            System.Threading.Tasks.Task<int> Orleans.Streams.IPubSubRendezvousGrain.ConsumerCount(Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<System.Int32>(1754136586, new object[] {@streamId} );
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.PubSubSubscriptionState[]> Orleans.Streams.IPubSubRendezvousGrain.DiagGetConsumers(Orleans.Streams.StreamId @streamId)
            {

                return base.InvokeMethodAsync<Orleans.Streams.PubSubSubscriptionState[]>(-1264954998, new object[] {@streamId} );
            }
            
            System.Threading.Tasks.Task Orleans.Streams.IPubSubRendezvousGrain.Validate()
            {

                return base.InvokeMethodAsync<object>(1980500241, new object[] {} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<Orleans.Runtime.GuidId>> Orleans.Streams.IPubSubRendezvousGrain.GetAllSubscriptions(Orleans.Streams.StreamId @streamId, Orleans.Streams.IStreamConsumerExtension @streamConsumer)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<Orleans.Runtime.GuidId>>(2028422179, new object[] {@streamId, @streamConsumer is global::Orleans.Grain ? @streamConsumer.AsReference<Orleans.Streams.IStreamConsumerExtension>() : @streamConsumer} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Orleans.Streams.Orleans.Streams.IPubSubRendezvousGrain", 1746702088)]
    internal class PubSubRendezvousGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1746702088;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1746702088:  // IPubSubRendezvousGrain
                        switch (methodId)
                        {
                            case 912534711: 
                                return ((IPubSubRendezvousGrain)grain).RegisterProducer((StreamId)arguments[0], (IStreamProducerExtension)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1454606735: 
                                return ((IPubSubRendezvousGrain)grain).UnregisterProducer((StreamId)arguments[0], (IStreamProducerExtension)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -544360167: 
                                return ((IPubSubRendezvousGrain)grain).RegisterConsumer((GuidId)arguments[0], (StreamId)arguments[1], (IStreamConsumerExtension)arguments[2], (StreamSequenceToken)arguments[3], (IStreamFilterPredicateWrapper)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1942100900: 
                                return ((IPubSubRendezvousGrain)grain).UnregisterConsumer((GuidId)arguments[0], (StreamId)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 687623645: 
                                return ((IPubSubRendezvousGrain)grain).ProducerCount((StreamId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1754136586: 
                                return ((IPubSubRendezvousGrain)grain).ConsumerCount((StreamId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1264954998: 
                                return ((IPubSubRendezvousGrain)grain).DiagGetConsumers((StreamId)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1980500241: 
                                return ((IPubSubRendezvousGrain)grain).Validate().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2028422179: 
                                return ((IPubSubRendezvousGrain)grain).GetAllSubscriptions((StreamId)arguments[0], (IStreamConsumerExtension)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1746702088:  // IPubSubRendezvousGrain
                    switch (methodId)
                    {
                        case 912534711:
                            return "RegisterProducer";
                    case 1454606735:
                            return "UnregisterProducer";
                    case -544360167:
                            return "RegisterConsumer";
                    case 1942100900:
                            return "UnregisterConsumer";
                    case 687623645:
                            return "ProducerCount";
                    case 1754136586:
                            return "ConsumerCount";
                    case -1264954998:
                            return "DiagGetConsumers";
                    case 1980500241:
                            return "Validate";
                    case 2028422179:
                            return "GetAllSubscriptions";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class StreamSubscriptionHandleImplGenericMaster
    {
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamSubscriptionHandleImpl<>), StreamSubscriptionHandleImplGenericMaster.GenericCopier, StreamSubscriptionHandleImplGenericMaster.GenericSerializer, StreamSubscriptionHandleImplGenericMaster.GenericDeserializer);
        }
        
        public static System.Type CreateConcreteType(System.Type[] typeParams)
        {
            return typeof(Orleans_Streams_StreamSubscriptionHandleImplSerialization<>).MakeGenericType(typeParams);
        }
        
        public static object GenericCopier(object obj)
        {
            System.Type t = StreamSubscriptionHandleImplGenericMaster.CreateConcreteType(obj.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("DeepCopier");
            object[] args = new object[] {
                    obj};
            return f.Invoke(null, args);
        }
        
        public static void GenericSerializer(object input, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            System.Type t = StreamSubscriptionHandleImplGenericMaster.CreateConcreteType(input.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Serializer");
            object[] args = new object[] {
                    input,
                    stream,
                    expected};
            f.Invoke(null, args);
        }
        
        public static object GenericDeserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            System.Type t = StreamSubscriptionHandleImplGenericMaster.CreateConcreteType(expected.GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Deserializer");
            object[] args = new object[] {
                    expected,
                    stream};
            return f.Invoke(null, args);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class Orleans_Streams_StreamSubscriptionHandleImplSerialization<T>
    
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static Orleans_Streams_StreamSubscriptionHandleImplSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.StreamSubscriptionHandleImpl<T> input = ((Orleans.Streams.StreamSubscriptionHandleImpl<T>)(original));
            Orleans.Streams.StreamSubscriptionHandleImpl<T> result = ((Orleans.Streams.StreamSubscriptionHandleImpl<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(StreamSubscriptionHandleImpl<T>))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.IsValid;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.SubscriptionId;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = fieldInfo4.GetValue(input);
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamSubscriptionHandleImpl<T> input = ((Orleans.Streams.StreamSubscriptionHandleImpl<T>)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsValid, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SubscriptionId, stream, typeof(Orleans.Runtime.GuidId));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(Orleans.Streams.IStreamFilterPredicateWrapper));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(Orleans.Streams.StreamImpl<T>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamSubscriptionHandleImpl<T> result = ((Orleans.Streams.StreamSubscriptionHandleImpl<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(StreamSubscriptionHandleImpl<T>))));
            object objResult = ((object)(result));
            object temp1 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.GuidId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GuidId), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamFilterPredicateWrapper), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Orleans.Streams.StreamImpl<T>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamImpl<T>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamSubscriptionHandleImpl<T>), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.StreamSubscriptionHandleImpl<T>).GetField("<IsValid>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.StreamSubscriptionHandleImpl<T>).GetField("<SubscriptionId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.StreamSubscriptionHandleImpl<T>).GetField("filterWrapper", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Streams.StreamSubscriptionHandleImpl<T>).GetField("streamImpl", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_StreamConsumerCollectionSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_Streams_StreamConsumerCollectionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.StreamConsumerCollection input = ((Orleans.Streams.StreamConsumerCollection)(original));
            Orleans.Streams.StreamConsumerCollection result = new Orleans.Streams.StreamConsumerCollection();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<Orleans.Runtime.GuidId,Orleans.Streams.StreamConsumerData>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamConsumerCollection input = ((Orleans.Streams.StreamConsumerCollection)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<Orleans.Runtime.GuidId,Orleans.Streams.StreamConsumerData>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamConsumerCollection result = new Orleans.Streams.StreamConsumerCollection();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<Orleans.Runtime.GuidId,Orleans.Streams.StreamConsumerData>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<Orleans.Runtime.GuidId,Orleans.Streams.StreamConsumerData>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamConsumerCollection), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.StreamConsumerCollection).GetField("queueData", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_StreamFilterPredicateSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static Orleans_Streams_StreamFilterPredicateSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.StreamFilterPredicate input = ((Orleans.Streams.StreamFilterPredicate)(original));
            Orleans.Streams.StreamFilterPredicate result = ((Orleans.Streams.StreamFilterPredicate)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.StreamFilterPredicate))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = fieldInfo4.GetValue(input);
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = fieldInfo5.GetValue(input);
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamFilterPredicate input = ((Orleans.Streams.StreamFilterPredicate)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(object));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamFilterPredicate result = ((Orleans.Streams.StreamFilterPredicate)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.StreamFilterPredicate))));
            object objResult = ((object)(result));
            object temp1 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamFilterPredicate), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(System.MulticastDelegate).GetField("_invocationCount", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(System.MulticastDelegate).GetField("_invocationList", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.StreamFilterPredicate).GetField("_methodBase", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Streams.StreamFilterPredicate).GetField("_methodPtr", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Streams.StreamFilterPredicate).GetField("_methodPtrAux", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Streams.StreamFilterPredicate).GetField("_target", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_FilterPredicateWrapperDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Streams_FilterPredicateWrapperDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.FilterPredicateWrapperData input = ((Orleans.Streams.FilterPredicateWrapperData)(original));
            Orleans.Streams.FilterPredicateWrapperData result = ((Orleans.Streams.FilterPredicateWrapperData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.FilterPredicateWrapperData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = Orleans.Serialization.SerializationManager.DeepCopyInner(input.FilterData);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = fieldInfo2.GetValue(input);
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = fieldInfo3.GetValue(input);
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.FilterPredicateWrapperData input = ((Orleans.Streams.FilterPredicateWrapperData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FilterData, stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.FilterPredicateWrapperData result = ((Orleans.Streams.FilterPredicateWrapperData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.FilterPredicateWrapperData))));
            object objResult = ((object)(result));
            object temp1 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.FilterPredicateWrapperData), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.FilterPredicateWrapperData).GetField("<FilterData>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.FilterPredicateWrapperData).GetField("className", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.FilterPredicateWrapperData).GetField("methodName", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_OrFilterSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_Streams_OrFilterSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.OrFilter input = ((Orleans.Streams.OrFilter)(original));
            Orleans.Streams.OrFilter result = ((Orleans.Streams.OrFilter)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.OrFilter))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.List<Orleans.Streams.IStreamFilterPredicateWrapper>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.OrFilter input = ((Orleans.Streams.OrFilter)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.List<Orleans.Streams.IStreamFilterPredicateWrapper>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.OrFilter result = ((Orleans.Streams.OrFilter)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.OrFilter))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.List<Orleans.Streams.IStreamFilterPredicateWrapper>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Orleans.Streams.IStreamFilterPredicateWrapper>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.OrFilter), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.OrFilter).GetField("filters", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_ImplicitStreamSubscriberTableSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_Streams_ImplicitStreamSubscriberTableSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.ImplicitStreamSubscriberTable input = ((Orleans.Streams.ImplicitStreamSubscriberTable)(original));
            Orleans.Streams.ImplicitStreamSubscriberTable result = ((Orleans.Streams.ImplicitStreamSubscriberTable)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.ImplicitStreamSubscriberTable))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.HashSet<System.Int32>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.ImplicitStreamSubscriberTable input = ((Orleans.Streams.ImplicitStreamSubscriberTable)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.HashSet<System.Int32>>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.ImplicitStreamSubscriberTable result = ((Orleans.Streams.ImplicitStreamSubscriberTable)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.ImplicitStreamSubscriberTable))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.HashSet<System.Int32>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.HashSet<System.Int32>>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.ImplicitStreamSubscriberTable), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.ImplicitStreamSubscriberTable).GetField("table", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_PubSubPublisherStateSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Streams_PubSubPublisherStateSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.PubSubPublisherState input = ((Orleans.Streams.PubSubPublisherState)(original));
            Orleans.Streams.PubSubPublisherState result = ((Orleans.Streams.PubSubPublisherState)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.PubSubPublisherState))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Producer = ((Orleans.Streams.IStreamProducerExtension)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Producer)));
            object objResult = ((object)(result));
            object temp2 = input.Stream;
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.PubSubPublisherState input = ((Orleans.Streams.PubSubPublisherState)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Producer, stream, typeof(Orleans.Streams.IStreamProducerExtension));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Stream, stream, typeof(Orleans.Streams.StreamId));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.PubSubPublisherState result = ((Orleans.Streams.PubSubPublisherState)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.PubSubPublisherState))));
            result.Producer = ((Orleans.Streams.IStreamProducerExtension)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamProducerExtension), stream)));
            object objResult = ((object)(result));
            object temp2 = ((Orleans.Streams.StreamId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamId), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.PubSubPublisherState), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Orleans.Streams.PubSubPublisherState).GetField("Stream", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_PubSubSubscriptionStateSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Orleans_Streams_PubSubSubscriptionStateSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.PubSubSubscriptionState input = ((Orleans.Streams.PubSubSubscriptionState)(original));
            Orleans.Streams.PubSubSubscriptionState result = ((Orleans.Streams.PubSubSubscriptionState)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.PubSubSubscriptionState))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Streams.IStreamConsumerExtension)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Consumer)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.FilterWrapper)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.Stream;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Orleans.Streams.StreamSequenceToken)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.StreamSequenceToken)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.SubscriptionId;
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.PubSubSubscriptionState input = ((Orleans.Streams.PubSubSubscriptionState)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Consumer, stream, typeof(Orleans.Streams.IStreamConsumerExtension));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FilterWrapper, stream, typeof(Orleans.Streams.IStreamFilterPredicateWrapper));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Stream, stream, typeof(Orleans.Streams.StreamId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StreamSequenceToken, stream, typeof(Orleans.Streams.StreamSequenceToken));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SubscriptionId, stream, typeof(Orleans.Runtime.GuidId));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.PubSubSubscriptionState result = ((Orleans.Streams.PubSubSubscriptionState)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.PubSubSubscriptionState))));
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Streams.IStreamConsumerExtension)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamConsumerExtension), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamFilterPredicateWrapper), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Orleans.Streams.StreamId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamId), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Orleans.Streams.StreamSequenceToken)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamSequenceToken), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Orleans.Runtime.GuidId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GuidId), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.PubSubSubscriptionState), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.PubSubSubscriptionState).GetField("Consumer", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.PubSubSubscriptionState).GetField("FilterWrapper", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.PubSubSubscriptionState).GetField("Stream", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Streams.PubSubSubscriptionState).GetField("StreamSequenceToken", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Streams.PubSubSubscriptionState).GetField("SubscriptionId", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class StreamImplGenericMaster
    {
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamImpl<>), StreamImplGenericMaster.GenericCopier, StreamImplGenericMaster.GenericSerializer, StreamImplGenericMaster.GenericDeserializer);
        }
        
        public static System.Type CreateConcreteType(System.Type[] typeParams)
        {
            return typeof(Orleans_Streams_StreamImplSerialization<>).MakeGenericType(typeParams);
        }
        
        public static object GenericCopier(object obj)
        {
            System.Type t = StreamImplGenericMaster.CreateConcreteType(obj.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("DeepCopier");
            object[] args = new object[] {
                    obj};
            return f.Invoke(null, args);
        }
        
        public static void GenericSerializer(object input, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            System.Type t = StreamImplGenericMaster.CreateConcreteType(input.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Serializer");
            object[] args = new object[] {
                    input,
                    stream,
                    expected};
            f.Invoke(null, args);
        }
        
        public static object GenericDeserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            System.Type t = StreamImplGenericMaster.CreateConcreteType(expected.GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Deserializer");
            object[] args = new object[] {
                    expected,
                    stream};
            return f.Invoke(null, args);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class Orleans_Streams_StreamImplSerialization<T>
    
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Streams_StreamImplSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamImpl<T> input = ((Orleans.Streams.StreamImpl<T>)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(Orleans.Streams.StreamId));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamImpl<T> result = new StreamImpl<T>();
            object objResult = ((object)(result));
            object temp1 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Streams.StreamId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamId), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamImpl<T>), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.StreamImpl<T>).GetField("isRewindable", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.StreamImpl<T>).GetField("streamId", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_StreamIdSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static Orleans_Streams_StreamIdSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamId input = ((Orleans.Streams.StreamId)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(Orleans.Streams.StreamIdInternerKey));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamId result = ((Orleans.Streams.StreamId)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.StreamId))));
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Streams.StreamIdInternerKey)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamIdInternerKey), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamId), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.StreamId).GetField("key", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_StreamConsumerDataSerialization
    {
        
        static Orleans_Streams_StreamConsumerDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Streams.StreamConsumerData input = ((Orleans.Streams.StreamConsumerData)(original));
            Orleans.Streams.StreamConsumerData result = ((Orleans.Streams.StreamConsumerData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.StreamConsumerData))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Cursor = ((Orleans.Streams.IQueueAdapterCacheCursor)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Cursor)));
            result.Filter = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Filter)));
            result.State = input.State;
            result.StreamConsumer = ((Orleans.Streams.IStreamConsumerExtension)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.StreamConsumer)));
            result.StreamId = input.StreamId;
            result.SubscriptionId = input.SubscriptionId;
            result.Token = ((Orleans.Streams.StreamSequenceToken)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Token)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamConsumerData input = ((Orleans.Streams.StreamConsumerData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Cursor, stream, typeof(Orleans.Streams.IQueueAdapterCacheCursor));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Filter, stream, typeof(Orleans.Streams.IStreamFilterPredicateWrapper));
            Orleans.Serialization.SerializationManager.SerializeInner(input.State, stream, typeof(Orleans.Streams.StreamConsumerDataState));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StreamConsumer, stream, typeof(Orleans.Streams.IStreamConsumerExtension));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StreamId, stream, typeof(Orleans.Streams.StreamId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SubscriptionId, stream, typeof(Orleans.Runtime.GuidId));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Token, stream, typeof(Orleans.Streams.StreamSequenceToken));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamConsumerData result = ((Orleans.Streams.StreamConsumerData)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.StreamConsumerData))));
            result.Cursor = ((Orleans.Streams.IQueueAdapterCacheCursor)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IQueueAdapterCacheCursor), stream)));
            result.Filter = ((Orleans.Streams.IStreamFilterPredicateWrapper)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamFilterPredicateWrapper), stream)));
            result.State = ((Orleans.Streams.StreamConsumerDataState)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamConsumerDataState), stream)));
            result.StreamConsumer = ((Orleans.Streams.IStreamConsumerExtension)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.IStreamConsumerExtension), stream)));
            result.StreamId = ((Orleans.Streams.StreamId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamId), stream)));
            result.SubscriptionId = ((Orleans.Runtime.GuidId)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.GuidId), stream)));
            result.Token = ((Orleans.Streams.StreamSequenceToken)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Streams.StreamSequenceToken), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamConsumerData), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_QueueIdSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Streams_QueueIdSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.QueueId input = ((Orleans.Streams.QueueId)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(uint));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(uint));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.QueueId result = ((Orleans.Streams.QueueId)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Streams.QueueId))));
            object objResult = ((object)(result));
            object temp1 = ((uint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(uint), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((uint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(uint), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.QueueId), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.QueueId).GetField("queueId", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.QueueId).GetField("queueNamePrefix", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.QueueId).GetField("uniformHashCache", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Streams_StreamIdInternerKeySerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Orleans_Streams_StreamIdInternerKeySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Streams.StreamIdInternerKey input = ((Orleans.Streams.StreamIdInternerKey)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Streams.StreamIdInternerKey result = default(Orleans.Streams.StreamIdInternerKey);
            object objResult = ((object)(result));
            object temp1 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Streams.StreamIdInternerKey), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Streams.StreamIdInternerKey).GetField("Guid", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Streams.StreamIdInternerKey).GetField("Namespace", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Streams.StreamIdInternerKey).GetField("ProviderName", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
namespace OrleansSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Orleans.AzureUtils;
    using Microsoft.WindowsAzure.Storage;
    using Microsoft.WindowsAzure.Storage.Table;
    using System.Net;
    using Orleans.Runtime.Configuration;
    using Orleans.Providers;
    using System.Collections.ObjectModel;
    using System.Net.Sockets;
    using Orleans.Runtime;
    using System.Collections;
    using System.Runtime.Serialization;
    using System.Runtime.InteropServices;
    using System.Xml;
    using System.Xml.XPath;
    using System.IO;
    using Microsoft.Data.OData;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_AzureUtils_ClientMetricsDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        private static System.Reflection.FieldInfo fieldInfo15;
        
        private static System.Reflection.FieldInfo fieldInfo16;
        
        private static System.Reflection.FieldInfo fieldInfo17;
        
        static Orleans_AzureUtils_ClientMetricsDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.AzureUtils.ClientMetricsData input = ((Orleans.AzureUtils.ClientMetricsData)(original));
            Orleans.AzureUtils.ClientMetricsData result = new Orleans.AzureUtils.ClientMetricsData();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Address = input.Address;
            result.CPU = input.CPU;
            result.ClientId = input.ClientId;
            object objResult = ((object)(result));
            object temp4 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo4.GetValue(input))));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.ConnectedGatewayCount;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.DeploymentId;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.ETag;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.HostName;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.MemoryUsage;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.PartitionKey;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.ReceiveQueue;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.ReceivedMessages;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = input.RowKey;
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = input.SendQueue;
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = input.SentMessages;
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Timestamp)));
            fieldInfo17.SetValue(objResult, temp17);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.AzureUtils.ClientMetricsData input = ((Orleans.AzureUtils.ClientMetricsData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CPU, stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ConnectedGatewayCount, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeploymentId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HostName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MemoryUsage, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PartitionKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceiveQueue, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceivedMessages, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RowKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SendQueue, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SentMessages, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Timestamp, stream, typeof(System.DateTimeOffset));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.AzureUtils.ClientMetricsData result = new Orleans.AzureUtils.ClientMetricsData();
            result.Address = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CPU = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            result.ClientId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            object objResult = ((object)(result));
            object temp4 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTimeOffset), stream)));
            fieldInfo17.SetValue(objResult, temp17);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.AzureUtils.ClientMetricsData), DeepCopier, Serializer, Deserializer);
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledRead>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledWrite>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<ConnectedGatewayCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<DeploymentId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<ETag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<HostName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<MemoryUsage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<PartitionKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<ReceiveQueue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<ReceivedMessages>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<RowKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo15 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<SendQueue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo16 = typeof(Orleans.AzureUtils.ClientMetricsData).GetField("<SentMessages>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo17 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<Timestamp>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_OperationContextSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        static Microsoft_WindowsAzure_Storage_OperationContextSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.OperationContext input = ((Microsoft.WindowsAzure.Storage.OperationContext)(original));
            Microsoft.WindowsAzure.Storage.OperationContext result = new Microsoft.WindowsAzure.Storage.OperationContext();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ClientRequestID = input.ClientRequestID;
            result.EndTime = input.EndTime;
            result.LogLevel = input.LogLevel;
            result.StartTime = input.StartTime;
            result.UserHeaders = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.UserHeaders)));
            object objResult = ((object)(result));
            object temp6 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo7.GetValue(input))));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo8.GetValue(input))));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo9.GetValue(input))));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.RequestResult>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo10.GetValue(input))));
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.OperationContext input = ((Microsoft.WindowsAzure.Storage.OperationContext)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientRequestID, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EndTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LogLevel, stream, typeof(Microsoft.WindowsAzure.Storage.LogLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UserHeaders, stream, typeof(System.Collections.Generic.IDictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo8.GetValue(input), stream, typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo9.GetValue(input), stream, typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo10.GetValue(input), stream, typeof(System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.RequestResult>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.OperationContext result = new Microsoft.WindowsAzure.Storage.OperationContext();
            result.ClientRequestID = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.EndTime = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.LogLevel = ((Microsoft.WindowsAzure.Storage.LogLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.LogLevel), stream)));
            result.StartTime = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.UserHeaders = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,System.String>), stream)));
            object objResult = ((object)(result));
            object temp6 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.RequestResult>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.RequestResult>), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.OperationContext), DeepCopier, Serializer, Deserializer);
            fieldInfo6 = typeof(Microsoft.WindowsAzure.Storage.OperationContext).GetField("RequestCompleted", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Microsoft.WindowsAzure.Storage.OperationContext).GetField("ResponseReceived", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.OperationContext).GetField("Retrying", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Microsoft.WindowsAzure.Storage.OperationContext).GetField("SendingRequest", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Microsoft.WindowsAzure.Storage.OperationContext).GetField("requestResults", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_RequestEventArgsSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Microsoft_WindowsAzure_Storage_RequestEventArgsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.RequestEventArgs input = ((Microsoft.WindowsAzure.Storage.RequestEventArgs)(original));
            Microsoft.WindowsAzure.Storage.RequestEventArgs result = ((Microsoft.WindowsAzure.Storage.RequestEventArgs)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Net.HttpWebRequest)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Request)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Microsoft.WindowsAzure.Storage.RequestResult)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.RequestInformation)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Net.HttpWebResponse)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Response)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.RequestEventArgs input = ((Microsoft.WindowsAzure.Storage.RequestEventArgs)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Request, stream, typeof(System.Net.HttpWebRequest));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RequestInformation, stream, typeof(Microsoft.WindowsAzure.Storage.RequestResult));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Response, stream, typeof(System.Net.HttpWebResponse));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.RequestEventArgs result = ((Microsoft.WindowsAzure.Storage.RequestEventArgs)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs))));
            object objResult = ((object)(result));
            object temp1 = ((System.Net.HttpWebRequest)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Net.HttpWebRequest), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Microsoft.WindowsAzure.Storage.RequestResult)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.RequestResult), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Net.HttpWebResponse)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Net.HttpWebResponse), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs).GetField("<Request>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs).GetField("<RequestInformation>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.RequestEventArgs).GetField("<Response>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_AzureUtils_StatsTableDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        static Orleans_AzureUtils_StatsTableDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.AzureUtils.StatsTableData input = ((Orleans.AzureUtils.StatsTableData)(original));
            Orleans.AzureUtils.StatsTableData result = new Orleans.AzureUtils.StatsTableData();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Address = input.Address;
            object objResult = ((object)(result));
            object temp2 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input))));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.DeploymentId;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.ETag;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.HostName;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.IsDelta;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.Name;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.PartitionKey;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.RowKey;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.StatValue;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.Statistic;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.Time;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Timestamp)));
            fieldInfo14.SetValue(objResult, temp14);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.AzureUtils.StatsTableData input = ((Orleans.AzureUtils.StatsTableData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeploymentId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HostName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsDelta, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PartitionKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RowKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatValue, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Statistic, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Timestamp, stream, typeof(System.DateTimeOffset));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.AzureUtils.StatsTableData result = new Orleans.AzureUtils.StatsTableData();
            result.Address = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            object objResult = ((object)(result));
            object temp2 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTimeOffset), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.AzureUtils.StatsTableData), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledRead>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledWrite>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<DeploymentId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<ETag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<HostName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<IsDelta>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<PartitionKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<RowKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<StatValue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<Statistic>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Orleans.AzureUtils.StatsTableData).GetField("<Time>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<Timestamp>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_AzureUtils_SiloMetricsDataSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        private static System.Reflection.FieldInfo fieldInfo15;
        
        private static System.Reflection.FieldInfo fieldInfo16;
        
        private static System.Reflection.FieldInfo fieldInfo17;
        
        private static System.Reflection.FieldInfo fieldInfo18;
        
        private static System.Reflection.FieldInfo fieldInfo19;
        
        private static System.Reflection.FieldInfo fieldInfo20;
        
        private static System.Reflection.FieldInfo fieldInfo21;
        
        private static System.Reflection.FieldInfo fieldInfo22;
        
        static Orleans_AzureUtils_SiloMetricsDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.AzureUtils.SiloMetricsData input = ((Orleans.AzureUtils.SiloMetricsData)(original));
            Orleans.AzureUtils.SiloMetricsData result = new Orleans.AzureUtils.SiloMetricsData();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Activations = input.Activations;
            result.Address = input.Address;
            result.CPU = input.CPU;
            result.ClientCount = input.ClientCount;
            object objResult = ((object)(result));
            object temp5 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.DeploymentId;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.ETag;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.GatewayAddress;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.HostName;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.LoadShedding;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.MemoryUsage;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.PartitionKey;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = input.ReceiveQueue;
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = input.ReceivedMessages;
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = input.RecentlyUsedActivations;
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = input.RequestQueue;
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = input.RowKey;
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = input.SendQueue;
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = input.SentMessages;
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = input.SiloName;
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Timestamp)));
            fieldInfo22.SetValue(objResult, temp22);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.AzureUtils.SiloMetricsData input = ((Orleans.AzureUtils.SiloMetricsData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Activations, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CPU, stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientCount, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeploymentId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GatewayAddress, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HostName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LoadShedding, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MemoryUsage, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PartitionKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceiveQueue, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReceivedMessages, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RecentlyUsedActivations, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RequestQueue, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RowKey, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SendQueue, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SentMessages, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Timestamp, stream, typeof(System.DateTimeOffset));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.AzureUtils.SiloMetricsData result = new Orleans.AzureUtils.SiloMetricsData();
            result.Activations = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.Address = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CPU = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            result.ClientCount = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            object objResult = ((object)(result));
            object temp5 = ((System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Action<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Func<System.Object,Microsoft.WindowsAzure.Storage.OperationContext,System.Collections.Generic.IDictionary<System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty>>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = ((System.DateTimeOffset)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTimeOffset), stream)));
            fieldInfo22.SetValue(objResult, temp22);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.AzureUtils.SiloMetricsData), DeepCopier, Serializer, Deserializer);
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledRead>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<CompiledWrite>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<DeploymentId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<ETag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<GatewayAddress>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<HostName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<LoadShedding>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<MemoryUsage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<PartitionKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<ReceiveQueue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo15 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<ReceivedMessages>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo16 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<RecentlyUsedActivations>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo17 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<RequestQueue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo18 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<RowKey>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo19 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<SendQueue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo20 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<SentMessages>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo21 = typeof(Orleans.AzureUtils.SiloMetricsData).GetField("<SiloName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo22 = typeof(Microsoft.WindowsAzure.Storage.Table.TableEntity).GetField("<Timestamp>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_LimitValueSerialization
    {
        
        static Orleans_Runtime_Configuration_LimitValueSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.LimitValue input = ((Orleans.Runtime.Configuration.LimitValue)(original));
            Orleans.Runtime.Configuration.LimitValue result = new Orleans.Runtime.Configuration.LimitValue();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.HardLimitThreshold = input.HardLimitThreshold;
            result.Name = input.Name;
            result.SoftLimitThreshold = input.SoftLimitThreshold;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.LimitValue input = ((Orleans.Runtime.Configuration.LimitValue)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HardLimitThreshold, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SoftLimitThreshold, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.LimitValue result = new Orleans.Runtime.Configuration.LimitValue();
            result.HardLimitThreshold = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.Name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.SoftLimitThreshold = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.LimitValue), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_MessagingConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        private static System.Reflection.FieldInfo fieldInfo15;
        
        private static System.Reflection.FieldInfo fieldInfo16;
        
        private static System.Reflection.FieldInfo fieldInfo17;
        
        private static System.Reflection.FieldInfo fieldInfo18;
        
        static Orleans_Runtime_Configuration_MessagingConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.MessagingConfiguration input = ((Orleans.Runtime.Configuration.MessagingConfiguration)(original));
            Orleans.Runtime.Configuration.MessagingConfiguration result = ((Orleans.Runtime.Configuration.MessagingConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.MessagingConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.BufferPoolBufferSize = input.BufferPoolBufferSize;
            result.BufferPoolMaxSize = input.BufferPoolMaxSize;
            result.BufferPoolPreallocationSize = input.BufferPoolPreallocationSize;
            result.ClientSenderBuckets = input.ClientSenderBuckets;
            result.DropExpiredMessages = input.DropExpiredMessages;
            result.GatewaySenderQueues = input.GatewaySenderQueues;
            result.MaxForwardCount = input.MaxForwardCount;
            result.MaxMessageBatchingSize = input.MaxMessageBatchingSize;
            result.MaxResendCount = input.MaxResendCount;
            result.MaxSocketAge = input.MaxSocketAge;
            object objResult = ((object)(result));
            object temp11 = fieldInfo11.GetValue(input);
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = fieldInfo12.GetValue(input);
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.ResendOnTimeout;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = input.ResponseTimeout;
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = input.SiloSenderQueues;
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = input.UseMessageBatching;
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = input.UseStandardSerializer;
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = fieldInfo18.GetValue(input);
            fieldInfo18.SetValue(objResult, temp18);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.MessagingConfiguration input = ((Orleans.Runtime.Configuration.MessagingConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolBufferSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolMaxSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolPreallocationSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientSenderBuckets, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DropExpiredMessages, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GatewaySenderQueues, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxForwardCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxMessageBatchingSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxResendCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxSocketAge, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo11.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo12.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResendOnTimeout, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResponseTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloSenderQueues, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseMessageBatching, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseStandardSerializer, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo18.GetValue(input), stream, typeof(bool));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.MessagingConfiguration result = ((Orleans.Runtime.Configuration.MessagingConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.MessagingConfiguration))));
            result.BufferPoolBufferSize = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.BufferPoolMaxSize = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.BufferPoolPreallocationSize = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.ClientSenderBuckets = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.DropExpiredMessages = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.GatewaySenderQueues = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.MaxForwardCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.MaxMessageBatchingSize = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.MaxResendCount = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.MaxSocketAge = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            object objResult = ((object)(result));
            object temp11 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo18.SetValue(objResult, temp18);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.MessagingConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo11 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MessageLossInjectionRate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<RejectionInjectionRate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<ResendOnTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<ResponseTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo15 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<SiloSenderQueues>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo16 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<UseMessageBatching>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo17 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<UseStandardSerializer>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo18 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("isSiloConfig", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_ProviderConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static Orleans_Runtime_Configuration_ProviderConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.ProviderConfiguration input = ((Orleans.Runtime.Configuration.ProviderConfiguration)(original));
            Orleans.Runtime.Configuration.ProviderConfiguration result = ((Orleans.Runtime.Configuration.ProviderConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ProviderConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.Name;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.Type;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.IList<Orleans.Runtime.Configuration.ProviderConfiguration>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input))));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.IList<Orleans.Providers.IProvider>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo4.GetValue(input))));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.ObjectModel.ReadOnlyDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.ProviderConfiguration input = ((Orleans.Runtime.Configuration.ProviderConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(System.Collections.Generic.IList<Orleans.Runtime.Configuration.ProviderConfiguration>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.Collections.Generic.IList<Orleans.Providers.IProvider>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.Collections.Generic.IDictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(System.Collections.ObjectModel.ReadOnlyDictionary<System.String,System.String>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.ProviderConfiguration result = ((Orleans.Runtime.Configuration.ProviderConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ProviderConfiguration))));
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.Collections.Generic.IList<Orleans.Runtime.Configuration.ProviderConfiguration>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<Orleans.Runtime.Configuration.ProviderConfiguration>), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.IList<Orleans.Providers.IProvider>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<Orleans.Providers.IProvider>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,System.String>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.ObjectModel.ReadOnlyDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.ObjectModel.ReadOnlyDictionary<System.String,System.String>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ProviderConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("childConfigurations", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("childProviders", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("properties", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.Configuration.ProviderConfiguration).GetField("readonlyCopyOfProperties", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_ProviderCategoryConfigurationSerialization
    {
        
        static Orleans_Runtime_Configuration_ProviderCategoryConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.ProviderCategoryConfiguration input = ((Orleans.Runtime.Configuration.ProviderCategoryConfiguration)(original));
            Orleans.Runtime.Configuration.ProviderCategoryConfiguration result = ((Orleans.Runtime.Configuration.ProviderCategoryConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ProviderCategoryConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Name = input.Name;
            result.Providers = ((System.Collections.Generic.IDictionary<System.String,Orleans.Providers.IProviderConfiguration>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Providers)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.ProviderCategoryConfiguration input = ((Orleans.Runtime.Configuration.ProviderCategoryConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Providers, stream, typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Providers.IProviderConfiguration>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.ProviderCategoryConfiguration result = ((Orleans.Runtime.Configuration.ProviderCategoryConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ProviderCategoryConfiguration))));
            result.Name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Providers = ((System.Collections.Generic.IDictionary<System.String,Orleans.Providers.IProviderConfiguration>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Providers.IProviderConfiguration>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ProviderCategoryConfiguration), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_ApplicationConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Runtime_Configuration_ApplicationConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.ApplicationConfiguration input = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(original));
            Orleans.Runtime.Configuration.ApplicationConfiguration result = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ApplicationConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.Configuration.GrainTypeConfiguration>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input))));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.ApplicationConfiguration input = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.Configuration.GrainTypeConfiguration>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.ApplicationConfiguration result = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.ApplicationConfiguration))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.Configuration.GrainTypeConfiguration>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,Orleans.Runtime.Configuration.GrainTypeConfiguration>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ApplicationConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.Configuration.ApplicationConfiguration).GetField("classSpecific", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.Configuration.ApplicationConfiguration).GetField("defaults", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_GrainTypeConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Orleans_Runtime_Configuration_GrainTypeConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.GrainTypeConfiguration input = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(original));
            Orleans.Runtime.Configuration.GrainTypeConfiguration result = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CollectionAgeLimit = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CollectionAgeLimit)));
            object objResult = ((object)(result));
            object temp2 = ((System.Type)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Type)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.GrainTypeConfiguration input = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CollectionAgeLimit, stream, typeof(System.Nullable<System.TimeSpan>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Type, stream, typeof(System.Type));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.GrainTypeConfiguration result = ((Orleans.Runtime.Configuration.GrainTypeConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration))));
            result.CollectionAgeLimit = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.TimeSpan>), stream)));
            object objResult = ((object)(result));
            object temp2 = ((System.Type)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Type), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Orleans.Runtime.Configuration.GrainTypeConfiguration).GetField("<Type>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class ConfigValueGenericMaster
    {
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ConfigValue<>), ConfigValueGenericMaster.GenericCopier, ConfigValueGenericMaster.GenericSerializer, ConfigValueGenericMaster.GenericDeserializer);
        }
        
        public static System.Type CreateConcreteType(System.Type[] typeParams)
        {
            return typeof(Orleans_Runtime_Configuration_ConfigValueSerialization<>).MakeGenericType(typeParams);
        }
        
        public static object GenericCopier(object obj)
        {
            System.Type t = ConfigValueGenericMaster.CreateConcreteType(obj.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("DeepCopier");
            object[] args = new object[] {
                    obj};
            return f.Invoke(null, args);
        }
        
        public static void GenericSerializer(object input, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            System.Type t = ConfigValueGenericMaster.CreateConcreteType(input.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Serializer");
            object[] args = new object[] {
                    input,
                    stream,
                    expected};
            f.Invoke(null, args);
        }
        
        public static object GenericDeserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            System.Type t = ConfigValueGenericMaster.CreateConcreteType(expected.GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Deserializer");
            object[] args = new object[] {
                    expected,
                    stream};
            return f.Invoke(null, args);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class Orleans_Runtime_Configuration_ConfigValueSerialization<T>
    
    {
        
        static Orleans_Runtime_Configuration_ConfigValueSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.ConfigValue<T> input = ((Orleans.Runtime.Configuration.ConfigValue<T>)(original));
            Orleans.Runtime.Configuration.ConfigValue<T> result = ((Orleans.Runtime.Configuration.ConfigValue<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ConfigValue<T>))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.IsDefaultValue = input.IsDefaultValue;
            result.Value = ((T)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Value)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.ConfigValue<T> input = ((Orleans.Runtime.Configuration.ConfigValue<T>)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsDefaultValue, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Value, stream, typeof(T));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.ConfigValue<T> result = ((Orleans.Runtime.Configuration.ConfigValue<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(ConfigValue<T>))));
            result.IsDefaultValue = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.Value = ((T)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(T), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ConfigValue<T>), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_GlobalConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        private static System.Reflection.FieldInfo fieldInfo15;
        
        private static System.Reflection.FieldInfo fieldInfo16;
        
        private static System.Reflection.FieldInfo fieldInfo17;
        
        private static System.Reflection.FieldInfo fieldInfo18;
        
        private static System.Reflection.FieldInfo fieldInfo19;
        
        private static System.Reflection.FieldInfo fieldInfo20;
        
        private static System.Reflection.FieldInfo fieldInfo21;
        
        private static System.Reflection.FieldInfo fieldInfo22;
        
        private static System.Reflection.FieldInfo fieldInfo23;
        
        private static System.Reflection.FieldInfo fieldInfo24;
        
        private static System.Reflection.FieldInfo fieldInfo25;
        
        private static System.Reflection.FieldInfo fieldInfo26;
        
        private static System.Reflection.FieldInfo fieldInfo27;
        
        private static System.Reflection.FieldInfo fieldInfo28;
        
        private static System.Reflection.FieldInfo fieldInfo29;
        
        private static System.Reflection.FieldInfo fieldInfo30;
        
        private static System.Reflection.FieldInfo fieldInfo31;
        
        private static System.Reflection.FieldInfo fieldInfo32;
        
        private static System.Reflection.FieldInfo fieldInfo33;
        
        private static System.Reflection.FieldInfo fieldInfo34;
        
        private static System.Reflection.FieldInfo fieldInfo35;
        
        private static System.Reflection.FieldInfo fieldInfo36;
        
        private static System.Reflection.FieldInfo fieldInfo37;
        
        private static System.Reflection.FieldInfo fieldInfo38;
        
        private static System.Reflection.FieldInfo fieldInfo39;
        
        private static System.Reflection.FieldInfo fieldInfo40;
        
        private static System.Reflection.FieldInfo fieldInfo41;
        
        private static System.Reflection.FieldInfo fieldInfo42;
        
        private static System.Reflection.FieldInfo fieldInfo43;
        
        private static System.Reflection.FieldInfo fieldInfo44;
        
        private static System.Reflection.FieldInfo fieldInfo45;
        
        private static System.Reflection.FieldInfo fieldInfo46;
        
        private static System.Reflection.FieldInfo fieldInfo47;
        
        private static System.Reflection.FieldInfo fieldInfo48;
        
        private static System.Reflection.FieldInfo fieldInfo49;
        
        private static System.Reflection.FieldInfo fieldInfo50;
        
        private static System.Reflection.FieldInfo fieldInfo51;
        
        private static System.Reflection.FieldInfo fieldInfo52;
        
        private static System.Reflection.FieldInfo fieldInfo53;
        
        private static System.Reflection.FieldInfo fieldInfo54;
        
        private static System.Reflection.FieldInfo fieldInfo55;
        
        static Orleans_Runtime_Configuration_GlobalConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.GlobalConfiguration input = ((Orleans.Runtime.Configuration.GlobalConfiguration)(original));
            Orleans.Runtime.Configuration.GlobalConfiguration result = ((Orleans.Runtime.Configuration.GlobalConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.GlobalConfiguration))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ActivationCountBasedPlacementChooseOutOf = input.ActivationCountBasedPlacementChooseOutOf;
            object objResult = ((object)(result));
            object temp2 = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Application)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.BufferPoolBufferSize;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.BufferPoolMaxSize;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.BufferPoolPreallocationSize;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.CacheSize;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.CacheTTLExtensionFactor;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.ClientRegistrationRefresh;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.ClientSenderBuckets;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = fieldInfo10.GetValue(input);
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.DataConnectionString;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.DeathVoteExpirationTimeout;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.DefaultPlacementStrategy;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = input.DeploymentId;
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = input.DeploymentLoadPublisherRefreshTime;
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = input.DirectoryCachingStrategy;
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = input.DirectoryLazyDeregistrationDelay;
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = input.DropExpiredMessages;
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = ((Orleans.Runtime.Configuration.ConfigValue<System.Int32>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo19.GetValue(input))));
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = input.GatewaySenderQueues;
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = input.IAmAliveTablePublishTimeout;
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = input.InitialCacheTTL;
            fieldInfo22.SetValue(objResult, temp22);
            object temp23 = input.LivenessEnabled;
            fieldInfo23.SetValue(objResult, temp23);
            object temp24 = input.MaxForwardCount;
            fieldInfo24.SetValue(objResult, temp24);
            object temp25 = input.MaxJoinAttemptTime;
            fieldInfo25.SetValue(objResult, temp25);
            object temp26 = input.MaxMessageBatchingSize;
            fieldInfo26.SetValue(objResult, temp26);
            object temp27 = input.MaxResendCount;
            fieldInfo27.SetValue(objResult, temp27);
            object temp28 = input.MaxSocketAge;
            fieldInfo28.SetValue(objResult, temp28);
            object temp29 = input.MaximumCacheTTL;
            fieldInfo29.SetValue(objResult, temp29);
            object temp30 = fieldInfo30.GetValue(input);
            fieldInfo30.SetValue(objResult, temp30);
            object temp31 = input.MockReminderTableTimeout;
            fieldInfo31.SetValue(objResult, temp31);
            object temp32 = input.NumMissedProbesLimit;
            fieldInfo32.SetValue(objResult, temp32);
            object temp33 = input.NumMissedTableIAmAliveLimit;
            fieldInfo33.SetValue(objResult, temp33);
            object temp34 = input.NumProbedSilos;
            fieldInfo34.SetValue(objResult, temp34);
            object temp35 = input.NumVirtualBucketsConsistentRing;
            fieldInfo35.SetValue(objResult, temp35);
            object temp36 = input.NumVotesForDeathDeclaration;
            fieldInfo36.SetValue(objResult, temp36);
            object temp37 = fieldInfo37.GetValue(input);
            fieldInfo37.SetValue(objResult, temp37);
            object temp38 = input.ProbeTimeout;
            fieldInfo38.SetValue(objResult, temp38);
            object temp39 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.ProviderCategoryConfiguration>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProviderConfigurations)));
            fieldInfo39.SetValue(objResult, temp39);
            object temp40 = fieldInfo40.GetValue(input);
            fieldInfo40.SetValue(objResult, temp40);
            object temp41 = input.ResendOnTimeout;
            fieldInfo41.SetValue(objResult, temp41);
            object temp42 = input.ResponseTimeout;
            fieldInfo42.SetValue(objResult, temp42);
            object temp43 = ((System.Collections.Generic.IList<System.Net.IPEndPoint>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SeedNodes)));
            fieldInfo43.SetValue(objResult, temp43);
            object temp44 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ServiceId)));
            fieldInfo44.SetValue(objResult, temp44);
            object temp45 = input.SiloSenderQueues;
            fieldInfo45.SetValue(objResult, temp45);
            object temp46 = ((byte[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Subnet)));
            fieldInfo46.SetValue(objResult, temp46);
            object temp47 = input.TableRefreshTimeout;
            fieldInfo47.SetValue(objResult, temp47);
            object temp48 = input.UseLivenessGossip;
            fieldInfo48.SetValue(objResult, temp48);
            object temp49 = input.UseMessageBatching;
            fieldInfo49.SetValue(objResult, temp49);
            object temp50 = input.UseStandardSerializer;
            fieldInfo50.SetValue(objResult, temp50);
            object temp51 = input.UseVirtualBucketsConsistentRing;
            fieldInfo51.SetValue(objResult, temp51);
            object temp52 = fieldInfo52.GetValue(input);
            fieldInfo52.SetValue(objResult, temp52);
            object temp53 = fieldInfo53.GetValue(input);
            fieldInfo53.SetValue(objResult, temp53);
            object temp54 = fieldInfo54.GetValue(input);
            fieldInfo54.SetValue(objResult, temp54);
            object temp55 = fieldInfo55.GetValue(input);
            fieldInfo55.SetValue(objResult, temp55);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.GlobalConfiguration input = ((Orleans.Runtime.Configuration.GlobalConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationCountBasedPlacementChooseOutOf, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Application, stream, typeof(Orleans.Runtime.Configuration.ApplicationConfiguration));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolBufferSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolMaxSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferPoolPreallocationSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CacheSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CacheTTLExtensionFactor, stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientRegistrationRefresh, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ClientSenderBuckets, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo10.GetValue(input), stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DataConnectionString, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeathVoteExpirationTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DefaultPlacementStrategy, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeploymentId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DeploymentLoadPublisherRefreshTime, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DirectoryCachingStrategy, stream, typeof(GlobalConfiguration.DirectoryCachingStrategyType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DirectoryLazyDeregistrationDelay, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DropExpiredMessages, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo19.GetValue(input), stream, typeof(Orleans.Runtime.Configuration.ConfigValue<System.Int32>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.GatewaySenderQueues, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IAmAliveTablePublishTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.InitialCacheTTL, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LivenessEnabled, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxForwardCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxJoinAttemptTime, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxMessageBatchingSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxResendCount, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxSocketAge, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaximumCacheTTL, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo30.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MockReminderTableTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NumMissedProbesLimit, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NumMissedTableIAmAliveLimit, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NumProbedSilos, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NumVirtualBucketsConsistentRing, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.NumVotesForDeathDeclaration, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo37.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProbeTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProviderConfigurations, stream, typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.ProviderCategoryConfiguration>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo40.GetValue(input), stream, typeof(double));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResendOnTimeout, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResponseTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SeedNodes, stream, typeof(System.Collections.Generic.IList<System.Net.IPEndPoint>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ServiceId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SiloSenderQueues, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subnet, stream, typeof(byte[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TableRefreshTimeout, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseLivenessGossip, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseMessageBatching, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseStandardSerializer, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseVirtualBucketsConsistentRing, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo52.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo53.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo54.GetValue(input), stream, typeof(GlobalConfiguration.LivenessProviderType));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo55.GetValue(input), stream, typeof(GlobalConfiguration.ReminderServiceProviderType));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.GlobalConfiguration result = ((Orleans.Runtime.Configuration.GlobalConfiguration)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Orleans.Runtime.Configuration.GlobalConfiguration))));
            result.ActivationCountBasedPlacementChooseOutOf = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            object objResult = ((object)(result));
            object temp2 = ((Orleans.Runtime.Configuration.ApplicationConfiguration)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.ApplicationConfiguration), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = ((GlobalConfiguration.DirectoryCachingStrategyType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(GlobalConfiguration.DirectoryCachingStrategyType), stream)));
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = ((Orleans.Runtime.Configuration.ConfigValue<System.Int32>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.ConfigValue<System.Int32>), stream)));
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo22.SetValue(objResult, temp22);
            object temp23 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo23.SetValue(objResult, temp23);
            object temp24 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo24.SetValue(objResult, temp24);
            object temp25 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo25.SetValue(objResult, temp25);
            object temp26 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo26.SetValue(objResult, temp26);
            object temp27 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo27.SetValue(objResult, temp27);
            object temp28 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo28.SetValue(objResult, temp28);
            object temp29 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo29.SetValue(objResult, temp29);
            object temp30 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo30.SetValue(objResult, temp30);
            object temp31 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo31.SetValue(objResult, temp31);
            object temp32 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo32.SetValue(objResult, temp32);
            object temp33 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo33.SetValue(objResult, temp33);
            object temp34 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo34.SetValue(objResult, temp34);
            object temp35 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo35.SetValue(objResult, temp35);
            object temp36 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo36.SetValue(objResult, temp36);
            object temp37 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo37.SetValue(objResult, temp37);
            object temp38 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo38.SetValue(objResult, temp38);
            object temp39 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.ProviderCategoryConfiguration>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.ProviderCategoryConfiguration>), stream)));
            fieldInfo39.SetValue(objResult, temp39);
            object temp40 = ((double)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(double), stream)));
            fieldInfo40.SetValue(objResult, temp40);
            object temp41 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo41.SetValue(objResult, temp41);
            object temp42 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo42.SetValue(objResult, temp42);
            object temp43 = ((System.Collections.Generic.IList<System.Net.IPEndPoint>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<System.Net.IPEndPoint>), stream)));
            fieldInfo43.SetValue(objResult, temp43);
            object temp44 = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            fieldInfo44.SetValue(objResult, temp44);
            object temp45 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo45.SetValue(objResult, temp45);
            object temp46 = ((byte[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(byte[]), stream)));
            fieldInfo46.SetValue(objResult, temp46);
            object temp47 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo47.SetValue(objResult, temp47);
            object temp48 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo48.SetValue(objResult, temp48);
            object temp49 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo49.SetValue(objResult, temp49);
            object temp50 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo50.SetValue(objResult, temp50);
            object temp51 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo51.SetValue(objResult, temp51);
            object temp52 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo52.SetValue(objResult, temp52);
            object temp53 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo53.SetValue(objResult, temp53);
            object temp54 = ((GlobalConfiguration.LivenessProviderType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(GlobalConfiguration.LivenessProviderType), stream)));
            fieldInfo54.SetValue(objResult, temp54);
            object temp55 = ((GlobalConfiguration.ReminderServiceProviderType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(GlobalConfiguration.ReminderServiceProviderType), stream)));
            fieldInfo55.SetValue(objResult, temp55);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.GlobalConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<Application>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<BufferPoolBufferSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<BufferPoolMaxSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<BufferPoolPreallocationSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<CacheSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<CacheTTLExtensionFactor>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<ClientRegistrationRefresh>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<ClientSenderBuckets>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<CollectionQuantum>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DataConnectionString>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DeathVoteExpirationTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DefaultPlacementStrategy>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DeploymentId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo15 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DeploymentLoadPublisherRefreshTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo16 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DirectoryCachingStrategy>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo17 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<DirectoryLazyDeregistrationDelay>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo18 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<DropExpiredMessages>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo19 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<ExpectedClusterSizeConfigValue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo20 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<GatewaySenderQueues>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo21 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<IAmAliveTablePublishTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo22 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<InitialCacheTTL>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo23 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<LivenessEnabled>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo24 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MaxForwardCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo25 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<MaxJoinAttemptTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo26 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MaxMessageBatchingSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo27 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MaxResendCount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo28 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MaxSocketAge>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo29 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<MaximumCacheTTL>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo30 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<MessageLossInjectionRate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo31 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<MockReminderTableTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo32 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<NumMissedProbesLimit>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo33 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<NumMissedTableIAmAliveLimit>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo34 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<NumProbedSilos>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo35 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<NumVirtualBucketsConsistentRing>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo36 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<NumVotesForDeathDeclaration>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo37 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<PerformDeadlockDetection>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo38 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<ProbeTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo39 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<ProviderConfigurations>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo40 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<RejectionInjectionRate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo41 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<ResendOnTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo42 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<ResponseTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo43 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<SeedNodes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo44 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<ServiceId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo45 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<SiloSenderQueues>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo46 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<Subnet>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo47 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<TableRefreshTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo48 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<UseLivenessGossip>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo49 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<UseMessageBatching>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo50 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("<UseStandardSerializer>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo51 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("<UseVirtualBucketsConsistentRing>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo52 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("UseMockReminderTable", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo53 = typeof(Orleans.Runtime.Configuration.MessagingConfiguration).GetField("isSiloConfig", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo54 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("livenessServiceType", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo55 = typeof(Orleans.Runtime.Configuration.GlobalConfiguration).GetField("reminderServiceType", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_NodeConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        private static System.Reflection.FieldInfo fieldInfo14;
        
        private static System.Reflection.FieldInfo fieldInfo15;
        
        private static System.Reflection.FieldInfo fieldInfo16;
        
        private static System.Reflection.FieldInfo fieldInfo17;
        
        private static System.Reflection.FieldInfo fieldInfo18;
        
        private static System.Reflection.FieldInfo fieldInfo19;
        
        private static System.Reflection.FieldInfo fieldInfo20;
        
        private static System.Reflection.FieldInfo fieldInfo21;
        
        private static System.Reflection.FieldInfo fieldInfo22;
        
        private static System.Reflection.FieldInfo fieldInfo23;
        
        private static System.Reflection.FieldInfo fieldInfo24;
        
        private static System.Reflection.FieldInfo fieldInfo25;
        
        private static System.Reflection.FieldInfo fieldInfo26;
        
        private static System.Reflection.FieldInfo fieldInfo27;
        
        private static System.Reflection.FieldInfo fieldInfo28;
        
        private static System.Reflection.FieldInfo fieldInfo29;
        
        private static System.Reflection.FieldInfo fieldInfo30;
        
        private static System.Reflection.FieldInfo fieldInfo31;
        
        private static System.Reflection.FieldInfo fieldInfo32;
        
        private static System.Reflection.FieldInfo fieldInfo33;
        
        private static System.Reflection.FieldInfo fieldInfo34;
        
        private static System.Reflection.FieldInfo fieldInfo35;
        
        private static System.Reflection.FieldInfo fieldInfo36;
        
        private static System.Reflection.FieldInfo fieldInfo37;
        
        private static System.Reflection.FieldInfo fieldInfo38;
        
        private static System.Reflection.FieldInfo fieldInfo39;
        
        static Orleans_Runtime_Configuration_NodeConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.NodeConfiguration input = ((Orleans.Runtime.Configuration.NodeConfiguration)(original));
            Orleans.Runtime.Configuration.NodeConfiguration result = new Orleans.Runtime.Configuration.NodeConfiguration();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.ActivationSchedulingQuantum = input.ActivationSchedulingQuantum;
            result.AddressType = input.AddressType;
            result.BulkMessageLimit = input.BulkMessageLimit;
            object objResult = ((object)(result));
            object temp4 = input.DNSHostName;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.DefaultConnectionLimit;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.DefaultTraceLevel;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.DelayWarningThreshold;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.Expect100Continue;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.Generation;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.HostNameOrIPAddress;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = fieldInfo11.GetValue(input);
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.IsPrimaryNode;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = input.IsSeedNode;
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = input.LargeMessageWarningThreshold;
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.LimitValue>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LimitValues)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = input.LoadSheddingEnabled;
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = input.LoadSheddingLimit;
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = input.MaxActiveThreads;
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = input.MinDotNetThreadPoolSize;
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = input.Port;
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = input.PropagateActivityId;
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = ((System.Net.IPEndPoint)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProxyGatewayEndpoint)));
            fieldInfo22.SetValue(objResult, temp22);
            object temp23 = input.StatisticsCollectionLevel;
            fieldInfo23.SetValue(objResult, temp23);
            object temp24 = input.StatisticsLogWriteInterval;
            fieldInfo24.SetValue(objResult, temp24);
            object temp25 = input.StatisticsMetricsTableWriteInterval;
            fieldInfo25.SetValue(objResult, temp25);
            object temp26 = input.StatisticsPerfCountersWriteInterval;
            fieldInfo26.SetValue(objResult, temp26);
            object temp27 = input.StatisticsProviderName;
            fieldInfo27.SetValue(objResult, temp27);
            object temp28 = input.StatisticsWriteLogStatisticsToTable;
            fieldInfo28.SetValue(objResult, temp28);
            object temp29 = ((byte[])(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo29.GetValue(input))));
            fieldInfo29.SetValue(objResult, temp29);
            object temp30 = input.TraceFileName;
            fieldInfo30.SetValue(objResult, temp30);
            object temp31 = ((System.Collections.Generic.IList<System.Tuple<System.String,Logger.Severity>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TraceLevelOverrides)));
            fieldInfo31.SetValue(objResult, temp31);
            object temp32 = input.TraceToConsole;
            fieldInfo32.SetValue(objResult, temp32);
            object temp33 = input.TurnWarningLengthThreshold;
            fieldInfo33.SetValue(objResult, temp33);
            object temp34 = input.UseNagleAlgorithm;
            fieldInfo34.SetValue(objResult, temp34);
            object temp35 = input.WriteMessagingTraces;
            fieldInfo35.SetValue(objResult, temp35);
            object temp36 = fieldInfo36.GetValue(input);
            fieldInfo36.SetValue(objResult, temp36);
            object temp37 = fieldInfo37.GetValue(input);
            fieldInfo37.SetValue(objResult, temp37);
            object temp38 = fieldInfo38.GetValue(input);
            fieldInfo38.SetValue(objResult, temp38);
            object temp39 = fieldInfo39.GetValue(input);
            fieldInfo39.SetValue(objResult, temp39);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.NodeConfiguration input = ((Orleans.Runtime.Configuration.NodeConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ActivationSchedulingQuantum, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressType, stream, typeof(System.Net.Sockets.AddressFamily));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BulkMessageLimit, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DNSHostName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DefaultConnectionLimit, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DefaultTraceLevel, stream, typeof(Logger.Severity));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DelayWarningThreshold, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Expect100Continue, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Generation, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HostNameOrIPAddress, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo11.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsPrimaryNode, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IsSeedNode, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LargeMessageWarningThreshold, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LimitValues, stream, typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.LimitValue>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LoadSheddingEnabled, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LoadSheddingLimit, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MaxActiveThreads, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.MinDotNetThreadPoolSize, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Port, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropagateActivityId, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProxyGatewayEndpoint, stream, typeof(System.Net.IPEndPoint));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsCollectionLevel, stream, typeof(Orleans.Runtime.Configuration.StatisticsLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsLogWriteInterval, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsMetricsTableWriteInterval, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsPerfCountersWriteInterval, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsProviderName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StatisticsWriteLogStatisticsToTable, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo29.GetValue(input), stream, typeof(byte[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TraceFileName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TraceLevelOverrides, stream, typeof(System.Collections.Generic.IList<System.Tuple<System.String,Logger.Severity>>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TraceToConsole, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TurnWarningLengthThreshold, stream, typeof(System.TimeSpan));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UseNagleAlgorithm, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.WriteMessagingTraces, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo36.GetValue(input), stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo37.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo38.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo39.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.NodeConfiguration result = new Orleans.Runtime.Configuration.NodeConfiguration();
            result.ActivationSchedulingQuantum = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            result.AddressType = ((System.Net.Sockets.AddressFamily)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Net.Sockets.AddressFamily), stream)));
            result.BulkMessageLimit = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            object objResult = ((object)(result));
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Logger.Severity)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Logger.Severity), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            object temp14 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo14.SetValue(objResult, temp14);
            object temp15 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.LimitValue>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.LimitValue>), stream)));
            fieldInfo15.SetValue(objResult, temp15);
            object temp16 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo16.SetValue(objResult, temp16);
            object temp17 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo17.SetValue(objResult, temp17);
            object temp18 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo18.SetValue(objResult, temp18);
            object temp19 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo19.SetValue(objResult, temp19);
            object temp20 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo20.SetValue(objResult, temp20);
            object temp21 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo21.SetValue(objResult, temp21);
            object temp22 = ((System.Net.IPEndPoint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Net.IPEndPoint), stream)));
            fieldInfo22.SetValue(objResult, temp22);
            object temp23 = ((Orleans.Runtime.Configuration.StatisticsLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.StatisticsLevel), stream)));
            fieldInfo23.SetValue(objResult, temp23);
            object temp24 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo24.SetValue(objResult, temp24);
            object temp25 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo25.SetValue(objResult, temp25);
            object temp26 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo26.SetValue(objResult, temp26);
            object temp27 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo27.SetValue(objResult, temp27);
            object temp28 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo28.SetValue(objResult, temp28);
            object temp29 = ((byte[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(byte[]), stream)));
            fieldInfo29.SetValue(objResult, temp29);
            object temp30 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo30.SetValue(objResult, temp30);
            object temp31 = ((System.Collections.Generic.IList<System.Tuple<System.String,Logger.Severity>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IList<System.Tuple<System.String,Logger.Severity>>), stream)));
            fieldInfo31.SetValue(objResult, temp31);
            object temp32 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo32.SetValue(objResult, temp32);
            object temp33 = ((System.TimeSpan)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.TimeSpan), stream)));
            fieldInfo33.SetValue(objResult, temp33);
            object temp34 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo34.SetValue(objResult, temp34);
            object temp35 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo35.SetValue(objResult, temp35);
            object temp36 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo36.SetValue(objResult, temp36);
            object temp37 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo37.SetValue(objResult, temp37);
            object temp38 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo38.SetValue(objResult, temp38);
            object temp39 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo39.SetValue(objResult, temp39);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.NodeConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo4 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<DNSHostName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<DefaultConnectionLimit>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<DefaultTraceLevel>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<DelayWarningThreshold>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<Expect100Continue>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<Generation>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<HostNameOrIPAddress>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<InjectMoreWorkerThreads>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<IsPrimaryNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<IsSeedNode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo14 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<LargeMessageWarningThreshold>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo15 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<LimitValues>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo16 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<LoadSheddingEnabled>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo17 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<LoadSheddingLimit>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo18 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<MaxActiveThreads>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo19 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<MinDotNetThreadPoolSize>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo20 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<Port>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo21 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<PropagateActivityId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo22 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<ProxyGatewayEndpoint>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo23 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsCollectionLevel>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo24 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsLogWriteInterval>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo25 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsMetricsTableWriteInterval>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo26 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsPerfCountersWriteInterval>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo27 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsProviderName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo28 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<StatisticsWriteLogStatisticsToTable>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo29 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<Subnet>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo30 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<TraceFileName>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo31 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<TraceLevelOverrides>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo32 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<TraceToConsole>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo33 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<TurnWarningLengthThreshold>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo34 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<UseNagleAlgorithm>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo35 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("<WriteMessagingTraces>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo36 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("creationTimestamp", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo37 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("siloName", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo38 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("traceFilePattern", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo39 = typeof(Orleans.Runtime.Configuration.NodeConfiguration).GetField("workingStoreDir", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Orleans_Runtime_Configuration_ClusterConfigurationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        static Orleans_Runtime_Configuration_ClusterConfigurationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Orleans.Runtime.Configuration.ClusterConfiguration input = ((Orleans.Runtime.Configuration.ClusterConfiguration)(original));
            Orleans.Runtime.Configuration.ClusterConfiguration result = new Orleans.Runtime.Configuration.ClusterConfiguration();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Runtime.Configuration.NodeConfiguration)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Defaults)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.Configuration.GlobalConfiguration)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Globals)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = fieldInfo3.GetValue(input);
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.NodeConfiguration>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Overrides)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.SourceFile;
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.List<System.Action>>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo7.GetValue(input))));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.Net.IPEndPoint)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo8.GetValue(input))));
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Orleans.Runtime.Configuration.ClusterConfiguration input = ((Orleans.Runtime.Configuration.ClusterConfiguration)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Defaults, stream, typeof(Orleans.Runtime.Configuration.NodeConfiguration));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Globals, stream, typeof(Orleans.Runtime.Configuration.GlobalConfiguration));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Overrides, stream, typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.NodeConfiguration>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SourceFile, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.List<System.Action>>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo8.GetValue(input), stream, typeof(System.Net.IPEndPoint));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Orleans.Runtime.Configuration.ClusterConfiguration result = new Orleans.Runtime.Configuration.ClusterConfiguration();
            object objResult = ((object)(result));
            object temp1 = ((Orleans.Runtime.Configuration.NodeConfiguration)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.NodeConfiguration), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Orleans.Runtime.Configuration.GlobalConfiguration)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Orleans.Runtime.Configuration.GlobalConfiguration), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.NodeConfiguration>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,Orleans.Runtime.Configuration.NodeConfiguration>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.List<System.Action>>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.List<System.Action>>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.String>), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.Net.IPEndPoint)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Net.IPEndPoint), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Orleans.Runtime.Configuration.ClusterConfiguration), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("<Defaults>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("<Globals>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("<IsRunningAsUnitTest>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("<Overrides>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("<SourceFile>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("listeners", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("overrideXml", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Orleans.Runtime.Configuration.ClusterConfiguration).GetField("primaryNode", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_Table_EntityPropertySerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Microsoft_WindowsAzure_Storage_Table_EntityPropertySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.Table.EntityProperty input = ((Microsoft.WindowsAzure.Storage.Table.EntityProperty)(original));
            Microsoft.WindowsAzure.Storage.Table.EntityProperty result = ((Microsoft.WindowsAzure.Storage.Table.EntityProperty)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.PropertyType;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.Table.EntityProperty input = ((Microsoft.WindowsAzure.Storage.Table.EntityProperty)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PropertyType, stream, typeof(Microsoft.WindowsAzure.Storage.Table.EdmType));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(object));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.Table.EntityProperty result = ((Microsoft.WindowsAzure.Storage.Table.EntityProperty)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty))));
            object objResult = ((object)(result));
            object temp1 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Microsoft.WindowsAzure.Storage.Table.EdmType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Table.EdmType), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty).GetField("<IsNull>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty).GetField("<PropertyType>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Table.EntityProperty).GetField("propertyAsObject", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_RequestResultSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        private static System.Reflection.FieldInfo fieldInfo11;
        
        private static System.Reflection.FieldInfo fieldInfo12;
        
        private static System.Reflection.FieldInfo fieldInfo13;
        
        static Microsoft_WindowsAzure_Storage_RequestResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.RequestResult input = ((Microsoft.WindowsAzure.Storage.RequestResult)(original));
            Microsoft.WindowsAzure.Storage.RequestResult result = new Microsoft.WindowsAzure.Storage.RequestResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.ContentMd5;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.EgressBytes;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.EndTime;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.Etag;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ExtendedErrorInformation)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = input.HttpStatusCode;
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = input.HttpStatusMessage;
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = input.IngressBytes;
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = input.RequestDate;
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = input.ServiceRequestID;
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = input.StartTime;
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = input.TargetLocation;
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((System.Exception)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo13.GetValue(input))));
            fieldInfo13.SetValue(objResult, temp13);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.RequestResult input = ((Microsoft.WindowsAzure.Storage.RequestResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ContentMd5, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EgressBytes, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EndTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Etag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ExtendedErrorInformation, stream, typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HttpStatusCode, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.HttpStatusMessage, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.IngressBytes, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RequestDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ServiceRequestID, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StartTime, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TargetLocation, stream, typeof(Microsoft.WindowsAzure.Storage.StorageLocation));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo13.GetValue(input), stream, typeof(System.Exception));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.RequestResult result = new Microsoft.WindowsAzure.Storage.RequestResult();
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            object temp11 = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            fieldInfo11.SetValue(objResult, temp11);
            object temp12 = ((Microsoft.WindowsAzure.Storage.StorageLocation)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.StorageLocation), stream)));
            fieldInfo12.SetValue(objResult, temp12);
            object temp13 = ((System.Exception)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Exception), stream)));
            fieldInfo13.SetValue(objResult, temp13);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.RequestResult), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<ContentMd5>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<EgressBytes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<EndTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<Etag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<ExtendedErrorInformation>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<HttpStatusCode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<HttpStatusMessage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<IngressBytes>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<RequestDate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<ServiceRequestID>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo11 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<StartTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo12 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("<TargetLocation>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo13 = typeof(Microsoft.WindowsAzure.Storage.RequestResult).GetField("exception", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_StorageExtendedErrorInformationSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        static Microsoft_WindowsAzure_Storage_StorageExtendedErrorInformationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation input = ((Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)(original));
            Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation result = new Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.AdditionalDetails)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.ErrorCode;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.ErrorMessage;
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation input = ((Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AdditionalDetails, stream, typeof(System.Collections.Generic.IDictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ErrorCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ErrorMessage, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation result = new Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,System.String>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation).GetField("<AdditionalDetails>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation).GetField("<ErrorCode>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation).GetField("<ErrorMessage>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
