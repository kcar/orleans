//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace TestGrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Streams;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MultipleSubscriptionConsumerGrainFactory
    {
        

                        public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(TestGrainInterfaces.IMultipleSubscriptionConsumerGrain), -144647085, primaryKey));
                        }

                        public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(TestGrainInterfaces.IMultipleSubscriptionConsumerGrain), -144647085, primaryKey, grainClassNamePrefix));
                        }

                        public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(TestGrainInterfaces.IMultipleSubscriptionConsumerGrain), -144647085, primaryKey));
                        }

                        public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(TestGrainInterfaces.IMultipleSubscriptionConsumerGrain), -144647085, primaryKey, grainClassNamePrefix));
                        }

            public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MultipleSubscriptionConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("TestGrainInterfaces.TestGrainInterfaces.IMultipleSubscriptionConsumerGrain")]
        internal class MultipleSubscriptionConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, TestGrainInterfaces.IMultipleSubscriptionConsumerGrain
        {
            

            public static TestGrainInterfaces.IMultipleSubscriptionConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (TestGrainInterfaces.IMultipleSubscriptionConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(TestGrainInterfaces.IMultipleSubscriptionConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new MultipleSubscriptionConsumerGrainReference(gr);}, grainRef, -144647085);
            }
            
            protected internal MultipleSubscriptionConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MultipleSubscriptionConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -144647085;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "TestGrainInterfaces.TestGrainInterfaces.IMultipleSubscriptionConsumerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MultipleSubscriptionConsumerGrainReference input = ((MultipleSubscriptionConsumerGrainReference)(original));
                return ((MultipleSubscriptionConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MultipleSubscriptionConsumerGrainReference input = ((MultipleSubscriptionConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MultipleSubscriptionConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MultipleSubscriptionConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.StreamSubscriptionHandle<int>> TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task<Orleans.Streams.StreamSubscriptionHandle<int>> TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.Resume(StreamSubscriptionHandle<Int32> @handle)
            {

                return base.InvokeMethodAsync<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>(-966092664, new object[] {@handle} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.StopConsuming(StreamSubscriptionHandle<Int32> @handle)
            {

                return base.InvokeMethodAsync<object>(469928104, new object[] {@handle} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IList<Orleans.Streams.StreamSubscriptionHandle<int>>> TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.GetAllSubscriptions(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IList<Orleans.Streams.StreamSubscriptionHandle<System.Int32>>>(-2026651720, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Orleans.Streams.StreamSubscriptionHandle<int>, int>> TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<Orleans.Streams.StreamSubscriptionHandle<System.Int32>,System.Int32>>(2130169286, new object[] {} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.ClearNumberConsumed()
            {

                return base.InvokeMethodAsync<object>(1012128928, new object[] {} );
            }
            
            System.Threading.Tasks.Task TestGrainInterfaces.IMultipleSubscriptionConsumerGrain.Deactivate()
            {

                return base.InvokeMethodAsync<object>(1834577625, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("TestGrainInterfaces.TestGrainInterfaces.IMultipleSubscriptionConsumerGrain", -144647085)]
    internal class MultipleSubscriptionConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -144647085;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -144647085:  // IMultipleSubscriptionConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -966092664: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).Resume((Orleans.Streams.StreamSubscriptionHandle<Int32>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 469928104: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).StopConsuming((Orleans.Streams.StreamSubscriptionHandle<Int32>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2026651720: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).GetAllSubscriptions((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2130169286: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1012128928: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).ClearNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1834577625: 
                                return ((IMultipleSubscriptionConsumerGrain)grain).Deactivate().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -144647085:  // IMultipleSubscriptionConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case -966092664:
                            return "Resume";
                    case 469928104:
                            return "StopConsuming";
                    case -2026651720:
                            return "GetAllSubscriptions";
                    case 2130169286:
                            return "GetNumberConsumed";
                    case 1012128928:
                            return "ClearNumberConsumed";
                    case 1834577625:
                            return "Deactivate";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace UnitTests.SampleStreaming
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_ProducerGrainFactory
    {
        

                        public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain), -49674695, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain), -49674695, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain), -49674695, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain), -49674695, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_ProducerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ProducerGrai" +
            "n")]
        internal class SampleStreaming_ProducerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain
        {
            

            public static UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_ProducerGrainReference(gr);}, grainRef, -49674695);
            }
            
            protected internal SampleStreaming_ProducerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_ProducerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -49674695;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ProducerGrai" +
                        "n";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_ProducerGrainReference input = ((SampleStreaming_ProducerGrainReference)(original));
                return ((SampleStreaming_ProducerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_ProducerGrainReference input = ((SampleStreaming_ProducerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_ProducerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_ProducerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain.BecomeProducer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(266083571, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain.StartPeriodicProducing()
            {

                return base.InvokeMethodAsync<object>(-2001831838, new object[] {} );
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain.StopPeriodicProducing()
            {

                return base.InvokeMethodAsync<object>(755705728, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain.GetNumberProduced()
            {

                return base.InvokeMethodAsync<System.Int32>(-970329735, new object[] {} );
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ProducerGrain.ClearNumberProduced()
            {

                return base.InvokeMethodAsync<object>(1732143298, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ProducerGrai" +
        "n", -49674695)]
    internal class SampleStreaming_ProducerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -49674695;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -49674695:  // ISampleStreaming_ProducerGrain
                        switch (methodId)
                        {
                            case 266083571: 
                                return ((ISampleStreaming_ProducerGrain)grain).BecomeProducer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2001831838: 
                                return ((ISampleStreaming_ProducerGrain)grain).StartPeriodicProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 755705728: 
                                return ((ISampleStreaming_ProducerGrain)grain).StopPeriodicProducing().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -970329735: 
                                return ((ISampleStreaming_ProducerGrain)grain).GetNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1732143298: 
                                return ((ISampleStreaming_ProducerGrain)grain).ClearNumberProduced().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -49674695:  // ISampleStreaming_ProducerGrain
                    switch (methodId)
                    {
                        case 266083571:
                            return "BecomeProducer";
                    case -2001831838:
                            return "StartPeriodicProducing";
                    case 755705728:
                            return "StopPeriodicProducing";
                    case -970329735:
                            return "GetNumberProduced";
                    case 1732143298:
                            return "ClearNumberProduced";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_ConsumerGrainFactory
    {
        

                        public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain), -1679761943, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain), -1679761943, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain), -1679761943, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain), -1679761943, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_ConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrai" +
            "n")]
        internal class SampleStreaming_ConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain
        {
            

            public static UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_ConsumerGrainReference(gr);}, grainRef, -1679761943);
            }
            
            protected internal SampleStreaming_ConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_ConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1679761943;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrai" +
                        "n";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_ConsumerGrainReference input = ((SampleStreaming_ConsumerGrainReference)(original));
                return ((SampleStreaming_ConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_ConsumerGrainReference input = ((SampleStreaming_ConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_ConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_ConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrai" +
        "n", -1679761943)]
    internal class SampleStreaming_ConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1679761943;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1679761943:  // ISampleStreaming_ConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_ConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_ConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_ConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1679761943:  // ISampleStreaming_ConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SampleStreaming_InlineConsumerGrainFactory
    {
        

                        public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain), 1313764963, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain), 1313764963, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain), 1313764963, primaryKey));
                        }

                        public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain), 1313764963, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SampleStreaming_InlineConsumerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_InlineConsum" +
            "erGrain")]
        internal class SampleStreaming_InlineConsumerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain
        {
            

            public static UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.SampleStreaming.ISampleStreaming_InlineConsumerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SampleStreaming_InlineConsumerGrainReference(gr);}, grainRef, 1313764963);
            }
            
            protected internal SampleStreaming_InlineConsumerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SampleStreaming_InlineConsumerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1313764963;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_InlineConsum" +
                        "erGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SampleStreaming_InlineConsumerGrainReference input = ((SampleStreaming_InlineConsumerGrainReference)(original));
                return ((SampleStreaming_InlineConsumerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SampleStreaming_InlineConsumerGrainReference input = ((SampleStreaming_InlineConsumerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SampleStreaming_InlineConsumerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1679761943));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SampleStreaming_InlineConsumerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.BecomeConsumer(System.Guid @streamId, string @streamNamespace, string @providerToUse)
            {

                return base.InvokeMethodAsync<object>(210218485, new object[] {@streamId, @streamNamespace, @providerToUse} );
            }
            
            System.Threading.Tasks.Task UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.StopConsuming()
            {

                return base.InvokeMethodAsync<object>(1151053849, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.SampleStreaming.ISampleStreaming_ConsumerGrain.GetNumberConsumed()
            {

                return base.InvokeMethodAsync<System.Int32>(2130169286, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.SampleStreaming.UnitTests.SampleStreaming.ISampleStreaming_InlineConsum" +
        "erGrain", 1313764963)]
    internal class SampleStreaming_InlineConsumerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1313764963;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1313764963:  // ISampleStreaming_InlineConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_InlineConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1679761943:  // ISampleStreaming_ConsumerGrain
                        switch (methodId)
                        {
                            case 210218485: 
                                return ((ISampleStreaming_ConsumerGrain)grain).BecomeConsumer((Guid)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1151053849: 
                                return ((ISampleStreaming_ConsumerGrain)grain).StopConsuming().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2130169286: 
                                return ((ISampleStreaming_ConsumerGrain)grain).GetNumberConsumed().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1313764963:  // ISampleStreaming_InlineConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1679761943:  // ISampleStreaming_ConsumerGrain
                    switch (methodId)
                    {
                        case 210218485:
                            return "BecomeConsumer";
                    case 1151053849:
                            return "StopConsuming";
                    case 2130169286:
                            return "GetNumberConsumed";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace UnitTests.GrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGrainFactory
    {
        

                        public static UnitTests.GrainInterfaces.ISimpleGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrain), 1638410893, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrain), 1638410893, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrain), 1638410893, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrain), 1638410893, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.GrainInterfaces.ISimpleGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrain")]
        internal class SimpleGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGrain
        {
            

            public static UnitTests.GrainInterfaces.ISimpleGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.GrainInterfaces.ISimpleGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGrainReference(gr);}, grainRef, 1638410893);
            }
            
            protected internal SimpleGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1638410893;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGrainReference input = ((SimpleGrainReference)(original));
                return ((SimpleGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGrainReference input = ((SimpleGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @a)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrain", 1638410893)]
    internal class SimpleGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1638410893;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleObserverableGrainFactory
    {
        

                        public static UnitTests.GrainInterfaces.ISimpleObserverableGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleObserverableGrain), -1750443332, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleObserverableGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleObserverableGrain), -1750443332, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleObserverableGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleObserverableGrain), -1750443332, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleObserverableGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleObserverableGrain), -1750443332, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.GrainInterfaces.ISimpleObserverableGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleObserverableGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleObserverableGrain")]
        internal class SimpleObserverableGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleObserverableGrain
        {
            

            public static UnitTests.GrainInterfaces.ISimpleObserverableGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.GrainInterfaces.ISimpleObserverableGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.GrainInterfaces.ISimpleObserverableGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleObserverableGrainReference(gr);}, grainRef, -1750443332);
            }
            
            protected internal SimpleObserverableGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleObserverableGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1750443332;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleObserverableGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleObserverableGrainReference input = ((SimpleObserverableGrainReference)(original));
                return ((SimpleObserverableGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleObserverableGrainReference input = ((SimpleObserverableGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleObserverableGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1638410893));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleObserverableGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleObserverableGrain.Subscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(1453769850, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleObserverableGrain.Unsubscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(-1935244785, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @a)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleObserverableGrain", -1750443332)]
    internal class SimpleObserverableGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1750443332;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1750443332:  // ISimpleObserverableGrain
                        switch (methodId)
                        {
                            case 1453769850: 
                                return ((ISimpleObserverableGrain)grain).Subscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1935244785: 
                                return ((ISimpleObserverableGrain)grain).Unsubscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2129932222: 
                                return ((ISimpleObserverableGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleObserverableGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleObserverableGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleObserverableGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleObserverableGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleObserverableGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1750443332:  // ISimpleObserverableGrain
                    switch (methodId)
                    {
                        case 1453769850:
                            return "Subscribe";
                    case -1935244785:
                            return "Unsubscribe";
                    case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleGrainObserverFactory
    {
        

            public static UnitTests.GrainInterfaces.ISimpleGrainObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleGrainObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<UnitTests.GrainInterfaces.ISimpleGrainObserver> CreateObjectReference(UnitTests.GrainInterfaces.ISimpleGrainObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new SimpleGrainObserverMethodInvoker();
            return SimpleGrainObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(UnitTests.GrainInterfaces.ISimpleGrainObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrainObserver")]
        internal class SimpleGrainObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleGrainObserver
        {
            

            public static UnitTests.GrainInterfaces.ISimpleGrainObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.GrainInterfaces.ISimpleGrainObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.GrainInterfaces.ISimpleGrainObserver), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleGrainObserverReference(gr);}, grainRef, -1394652141);
            }
            
            protected internal SimpleGrainObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleGrainObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1394652141;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrainObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleGrainObserverReference input = ((SimpleGrainObserverReference)(original));
                return ((SimpleGrainObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleGrainObserverReference input = ((SimpleGrainObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleGrainObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleGrainObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void UnitTests.GrainInterfaces.ISimpleGrainObserver.StateChanged(int @a, int @b)
            {

                base.InvokeOneWayMethod(938096474, new object[] {@a, @b} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleGrainObserver", -1394652141)]
    internal class SimpleGrainObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1394652141;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1394652141:  // ISimpleGrainObserver
                        switch (methodId)
                        {
                            case 938096474: 
                                ((ISimpleGrainObserver)grain).StateChanged((Int32)arguments[0], (Int32)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1394652141:  // ISimpleGrainObserver
                    switch (methodId)
                    {
                        case 938096474:
                            return "StateChanged";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ObserverGrainFactory
    {
        

                        public static UnitTests.GrainInterfaces.IObserverGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.IObserverGrain), -378267896, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.IObserverGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.IObserverGrain), -378267896, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.GrainInterfaces.IObserverGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.IObserverGrain), -378267896, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.IObserverGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.IObserverGrain), -378267896, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.GrainInterfaces.IObserverGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ObserverGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.IObserverGrain")]
        internal class ObserverGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.IObserverGrain
        {
            

            public static UnitTests.GrainInterfaces.IObserverGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.GrainInterfaces.IObserverGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.GrainInterfaces.IObserverGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ObserverGrainReference(gr);}, grainRef, -378267896);
            }
            
            protected internal ObserverGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ObserverGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -378267896;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.IObserverGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ObserverGrainReference input = ((ObserverGrainReference)(original));
                return ((ObserverGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ObserverGrainReference input = ((ObserverGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ObserverGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ObserverGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IObserverGrain.SetTarget(UnitTests.GrainInterfaces.ISimpleObserverableGrain @target)
            {

                return base.InvokeMethodAsync<object>(-1674744194, new object[] {@target is global::Orleans.Grain ? @target.AsReference<UnitTests.GrainInterfaces.ISimpleObserverableGrain>() : @target} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.IObserverGrain.Subscribe(UnitTests.GrainInterfaces.ISimpleGrainObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(1453769850, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<UnitTests.GrainInterfaces.ISimpleGrainObserver>() : @observer} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.IObserverGrain", -378267896)]
    internal class ObserverGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -378267896;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -378267896:  // IObserverGrain
                        switch (methodId)
                        {
                            case -1674744194: 
                                return ((IObserverGrain)grain).SetTarget((ISimpleObserverableGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1453769850: 
                                return ((IObserverGrain)grain).Subscribe((ISimpleGrainObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -378267896:  // IObserverGrain
                    switch (methodId)
                    {
                        case -1674744194:
                            return "SetTarget";
                    case 1453769850:
                            return "Subscribe";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SimpleCLIGrainFactory
    {
        

                        public static UnitTests.GrainInterfaces.ISimpleCLIGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleCLIGrain), -2063970013, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleCLIGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleCLIGrain), -2063970013, primaryKey, grainClassNamePrefix));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleCLIGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleCLIGrain), -2063970013, primaryKey));
                        }

                        public static UnitTests.GrainInterfaces.ISimpleCLIGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(UnitTests.GrainInterfaces.ISimpleCLIGrain), -2063970013, primaryKey, grainClassNamePrefix));
                        }

            public static UnitTests.GrainInterfaces.ISimpleCLIGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SimpleCLIGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleCLIGrain")]
        internal class SimpleCLIGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, UnitTests.GrainInterfaces.ISimpleCLIGrain
        {
            

            public static UnitTests.GrainInterfaces.ISimpleCLIGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (UnitTests.GrainInterfaces.ISimpleCLIGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(UnitTests.GrainInterfaces.ISimpleCLIGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SimpleCLIGrainReference(gr);}, grainRef, -2063970013);
            }
            
            protected internal SimpleCLIGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SimpleCLIGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -2063970013;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleCLIGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SimpleCLIGrainReference input = ((SimpleCLIGrainReference)(original));
                return ((SimpleCLIGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SimpleCLIGrainReference input = ((SimpleCLIGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SimpleCLIGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1638410893));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SimpleCLIGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetA(int @a)
            {

                return base.InvokeMethodAsync<object>(2129932222, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.SetB(int @a)
            {

                return base.InvokeMethodAsync<object>(638886962, new object[] {@a} );
            }
            
            System.Threading.Tasks.Task UnitTests.GrainInterfaces.ISimpleGrain.IncrementA()
            {

                return base.InvokeMethodAsync<object>(1017190206, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB()
            {

                return base.InvokeMethodAsync<System.Int32>(1039727631, new object[] {} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetAxB(int @a, int @b)
            {

                return base.InvokeMethodAsync<System.Int32>(598136665, new object[] {@a, @b} );
            }
            
            System.Threading.Tasks.Task<int> UnitTests.GrainInterfaces.ISimpleGrain.GetA()
            {

                return base.InvokeMethodAsync<System.Int32>(-411561932, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("UnitTests.GrainInterfaces.UnitTests.GrainInterfaces.ISimpleCLIGrain", -2063970013)]
    internal class SimpleCLIGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -2063970013;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -2063970013:  // ISimpleCLIGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleCLIGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleCLIGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleCLIGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleCLIGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleCLIGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleCLIGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case 1638410893:  // ISimpleGrain
                        switch (methodId)
                        {
                            case 2129932222: 
                                return ((ISimpleGrain)grain).SetA((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 638886962: 
                                return ((ISimpleGrain)grain).SetB((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1017190206: 
                                return ((ISimpleGrain)grain).IncrementA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1039727631: 
                                return ((ISimpleGrain)grain).GetAxB().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 598136665: 
                                return ((ISimpleGrain)grain).GetAxB((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -411561932: 
                                return ((ISimpleGrain)grain).GetA().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -2063970013:  // ISimpleCLIGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case 1638410893:  // ISimpleGrain
                    switch (methodId)
                    {
                        case 2129932222:
                            return "SetA";
                    case 638886962:
                            return "SetB";
                    case 1017190206:
                            return "IncrementA";
                    case 1039727631:
                            return "GetAxB";
                    case 598136665:
                            return "GetAxB";
                    case -411561932:
                            return "GetA";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
